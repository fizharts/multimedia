{"version":3,"sources":["helpers/fun.js","redux/types/types.js","helpers/parametros.js","redux/ducks/EstadosDuck.js","helpers/parametrosHopitales.js","redux/ducks/HospitalesDuck.js","redux/ducks/PlanetasDuck.js","redux/store/rootReducer.js","redux/store/store.js","components/Estado.jsx","components/Parametros.jsx","components/EstadosComponent.jsx","helpers/urls.js","components/Contenedor.jsx","components/hospitales/Hospital.jsx","components/hospitales/ParametrosHospital.jsx","components/hospitales/HospitalesComponent.jsx","components/hospitales/ContenedorHospitales.jsx","helpers/markerEjemplo.js","components/interactivo/componentesThree/Controls/Controls.jsx","components/interactivo/componentesThree/Navigation/Navigation.jsx","components/interactivo/componentesThree/NavLink/NavLink.jsx","components/interactivo/componentesThree/NavsHospitales/NavH.jsx","components/interactivo/componentesThree/NavsHospitales/NavsHospitales.jsx","sounds/clickEs.mp3","components/interactivo/componentesThree/Marker/Marker.jsx","components/interactivo/componentesThree/Marker/CMarker.jsx","helpers/colores.js","components/interactivo/componentesThree/Room/Room.js","components/interactivo/componentesThree/Room/CRoom.jsx","components/interactivo/CPlanetas.jsx","helpers/hooks/useDate.js","components/interactivo/componentesThree/ContenedorPlanetas.jsx","router/AppRouter.jsx","App.jsx","config/DBConfig.js","index.js"],"names":["removeRepeats","Random","dataArray","setHelper","Set","Array","from","losDatos","urlGeneral","a","Axios","get","data","console","log","alertas","estatus_capacidad_hospitalaria","backgroundColor","color","convertirFecha","fechaInicial","replace","formatearFechas","fecha","mes","getMonth","length","getFullYear","getDate","types","parametros","initialState","datos","numeroRegistros","setParametros","facet","type","payload","diaHoy","hoy","ayer","fechaServidor","putDatos","dGenerales","parametrosHospitales","datosH","parametrosH","fechaH","fechaHInput","numeroRegistrosH","nombresHospitales","hoyF","setFechaInput","setHospitalesp","hospitales","setTitulo","titulo","setNombresH","nombres","setParametrosH","rootReducer","combineReducers","state","action","planetas","nombreHospitales","markersRedux","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Estado","fields","sector","sospechosos","indigena","fecha_ingreso","fecha_def","inmusupr","id_registro","entidad_res","tipo_paciente","uci","cardiovascular","clasificacion_final","neumonia","hipertension","entidad_um","toma_muestra_antigeno","epoc","asma","origen","toma_muestra_lab","nacionalidad","pais_origen","rango_edad","embarazo","municipio_res","sexo","obesidad","habla_lengua_indi","intubado","fecha_actualizacion","fecha_sintomas","diabetes","edad","resultado_lab","clas_final_escrita","pais_nacionalidad","tabaquismo","otra_com","migrante","resultado_antigeno","entidad_nac","otro_caso","renal_cronica","style","Parametros","EstadosComponent","db","useIndexedDB","dispatch","useDispatch","useSelector","handleChange","e","numero","target","value","useEffect","add","then","getAll","res","arrSinDuplicaciones","arrayBase","baseLimpia","filter","base","undefined","set","map","JSON","stringify","parse","yaEstaEnBase","className","name","id","defaultValue","min","max","step","required","onChange","height","recordid","urlHospitales","cantidad","Contenedor","url","datosCompletos","records","getState","moment","format","subtract","dato","record_timestamp","fechaHoy","fechaRest","getDatos","Hospital","coordenadas","institucion","nombre_hospital","estatus_capacidad_uci","ParametrosHospital","HospitalesComponent","useState","fechaInputS","setFechaIntputS","nombresDeLosHospitales","datoH","fechaI","fechaFormateada","setInputFechaDuck","htmlFor","nombre","ContenedorHospitales","numeroRegistrosHospitales","Date","fechaStageH","result","getDatosH","markerEjemplo","Controls","autoRotate","enabled","controls","useRef","useThree","camera","gl","useFrame","current","update","OrbitControls","ref","args","domElement","enableDamping","enableZoom","enableKeys","enablePan","dampingFactor","rotateSpeed","autoRotateSpeed","Navigation","cameraPosition","cameraTarget","position","lookAt","updateProjectionMatrix","NavLink","props","hovered","setHovered","AnimatedNavLink","animated","Nav","Link","linkSpring","useSpring","transform","padding","margin","borderRadius","onPointerOver","onPointerOut","onClick","onNavLinkClicked","cameraPos","onMouseEnter","NavH","markers","onNavigationItemClicked","onMouseLeaveS","marker","NavsHospitales","handleChangeDate","aria-describedby","defaultActiveKey","Marker","markerSpring","opacity","top","config","slow","infoSpring","Howl","src","start","display","selected","Html","scaleFactor","div","onMarkerClicked","CMarker","selectedItemIndex","markers2","markerNow","setmarkerNow","maker","loc","colores","Room","group","planet","rotation","y","children","forEach","item","colorH","col","colorPlaneta","dispose","visible","userData","test","attach","CRoom","initialCameraPos","initialControlsTarget","extend","sp","SoundPlanetas","random","CPlanetas","bandera","setBandera","cambiarDatos","setCambiarDatos","uno","integer","dos","tres","useCallback","arrayDePrueba","AnimatedNavigation","isAnimating","setIsAnimating","cachedPos","cachedTarget","pos","cameraValues","setCameraValues","cameraSpring","onRest","play","intensity","Stars","radius","depth","count","factor","saturation","fade","padStart","nuevaFecha","ContenedorPlanetas","tipoFecha","setfechaHoy","useDate","setFechaPlanetas","parameters","nombresH","record","getHospitalesP","AppRouter","exact","path","component","to","initDB","version","objectStoresMeta","storeConfig","keypath","autoIncrement","storeSchema","options","unique","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c59041e0.chunk.js","sourcesContent":["import { Random } from 'random-js';\r\nimport { moment } from 'moment';\r\nimport Axios from \"axios\"\r\n\r\nconst random = new Random()\r\n\r\nexport const removeRepeats = (dataArray) => {\r\n    let setHelper = new Set(dataArray)\r\n    let arreglo = Array.from(setHelper)\r\n    return [\r\n        arreglo\r\n    ]\r\n}\r\n\r\n\r\nexport const obtenerItem = (nombreItem) => {\r\n    let res = {}\r\n    if (localStorage.getItem(nombreItem)) {\r\n        res = localStorage.getItem(nombreItem)\r\n    }\r\n\r\n\r\n\r\n    return res\r\n}\r\n\r\nexport const setValorLocal = (nombreITem, valorItem) => {\r\n    let valorsito = JSON.stringify(valorItem)\r\n    console.log(valorItem)\r\n    localStorage.setItem(nombreITem, valorsito)\r\n}\r\n\r\n\r\nexport const convertString = (...valores) => {\r\n    let nuevosValores = valores.map(valor => {\r\n        return JSON.stringify(valor)\r\n    })\r\n    return [\r\n        nuevosValores\r\n    ]\r\n}\r\n\r\n\r\nexport const losDatos = async (urlGeneral) => {\r\n    const { data } = await Axios.get(urlGeneral)\r\n    console.log(data)\r\n    return data\r\n}\r\n\r\n\r\nexport const yaEstaEnBase = (arrayBase) => {\r\n    let baseLimpia = arrayBase.filter(base => {\r\n        return base.fecha !== undefined && base.datos.length !== 0\r\n    })\r\n\r\n    let set = new Set(baseLimpia.map(JSON.stringify))\r\n    let arrSinDuplicaciones = Array.from(set).map(JSON.parse);\r\n\r\n\r\n    return {\r\n        arrSinDuplicaciones\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const fechaHoy = () => {\r\n    let hoy = moment().format('DD-MM-YYYY')\r\n    return {\r\n        hoy\r\n    }\r\n}\r\nexport const alertas = (estatus_capacidad_hospitalaria) => {\r\n\r\n    switch (estatus_capacidad_hospitalaria) {\r\n        case 'Crítica':\r\n            return {\r\n                backgroundColor: 'red',\r\n                color: 'white'\r\n            }\r\n\r\n        case 'Media':\r\n            return {\r\n                backgroundColor: '#f0ad4e',\r\n                color: 'black'\r\n            }\r\n        case 'Buena':\r\n            return {\r\n                backgroundColor: '#5cb85c',\r\n                color: 'white'\r\n            }\r\n\r\n        default:\r\n            return {}\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const convertirFecha = (fechaInicial) => {\r\n    // 2020%2F12%2F20\r\n    let tipoFecha = fechaInicial.replace(/-/g, '%2F')\r\n\r\n\r\n    return [\r\n        tipoFecha\r\n    ]\r\n}\r\n\r\nexport const formatearFechas = (fecha) => {\r\n    let mes\r\n    if ((fecha.getMonth() + 1).length === 1) {\r\n        mes = `0${fecha.getMonth() + 1}`\r\n    } else {\r\n        mes = fecha.getMonth() + 1\r\n    }\r\n\r\n    let nuevaFecha = `${fecha.getFullYear()}-${mes}-${fecha.getDate()}`\r\n    return [\r\n        nuevaFecha\r\n    ]\r\n}\r\n\r\n\r\n\r\n\r\nexport const crearMaker = (datos) => {\r\n    let markers2 = [{\r\n        position: [0, 0, 0],\r\n        cameraPos: [18, 18, 18],\r\n        id: 0,\r\n        name: \"camaraCentral\",\r\n        loc: []\r\n    }]\r\n    let id = 1\r\n    datos.forEach(dato => {\r\n        let uno = random.integer(-100, 100)\r\n        let dos = random.integer(-100, 100)\r\n        let tres = random.integer(-100, 100)\r\n\r\n        markers2 = [\r\n            ...markers2,\r\n            {\r\n                position: [uno, dos, tres],\r\n                cameraPos: [uno, dos, tres + 10],\r\n                name: dato.fields.nombre_hospital,\r\n                id: id,\r\n                loc: dato.fields.coordenadas\r\n            }\r\n        ]\r\n        id++\r\n    })\r\n\r\n    return [\r\n        markers2\r\n    ]\r\n}\r\n\r\n\r\n\r\n\r\n","export const types = {\r\n    datosGenerales : '[data] datos generales' ,\r\n    fechaDHoy : '[date] fecha de hoy',\r\n    parametros : '[params] parametros',\r\n    numeroRegistros : '[registros] numero de registros',\r\n\r\n    datosGeneralesHospitales : '[dataHospitales] datos generales' ,\r\n    fechaDHoyHospitales : '[dataHospitales] fecha de hoy',\r\n    parametrosHospitales : '[dataHospitales] parametros',\r\n    numeroRegistrosHospitales : '[dataHospitales] numero de registros',\r\n    nombreHospitales : '[dataHospitales] nombre de hospitales',\r\n    fechaInput : '[dataHospitales] fecha del input' ,\r\n\r\n    tituloPlanetas : '[dataPlanetas] titulo',\r\n    datosPlanetas : '[dataPlanetas] datos',\r\n    nombreHospitalesPlanetas : '[dataPlanetas] nombreHospitales',\r\n    parametrosPlanetas : '[dataPlanetas] parametros',\r\n    fechaPlanetas : '[dataPlanetas] fechas' ,\r\n    makers : '[dataPlanetas] makers'\r\n\r\n    \r\n}","export const parametros = {\r\n    'sector' : 'sector' ,\r\n    'sospechosos' : 'sospechosos' ,\r\n    'indigena' : 'indigena' ,\r\n    'fecha_ingreso' : 'fecha_ingreso' ,\r\n    'fecha_def' : 'fecha_def' ,\r\n    'inmusupr' : 'inmusupr' ,\r\n    'id_registro' : 'id_registro' ,\r\n    'entidad_res' : 'entidad_res' ,\r\n    'tipo_paciente' : 'tipo_paciente' ,\r\n    'uci' : 'uci' ,\r\n    'cardiovascular' : 'cardiovascular' ,\r\n    'clasificacion_final' : 'clasificacion_final' ,\r\n    'neumonia' : 'neumonia' ,\r\n    'hipertension' : 'hipertension' ,\r\n    'entidad_um' : 'entidad_um' ,\r\n    'toma_muestra_antigeno' : 'toma_muestra_antigeno' ,\r\n    'epoc' : 'epoc' ,\r\n    'asma' : 'asma' ,\r\n    'origen' : 'origen' ,\r\n    'toma_muestra_lab' : 'toma_muestra_lab' ,\r\n    'nacionalidad' : 'nacionalidad' ,\r\n    'pais_origen' : 'pais_origen' ,\r\n    'rango_edad' : 'rango_edad' ,\r\n    'embarazo' : 'embarazo' ,\r\n    'municipio_res' : 'municipio_res' ,\r\n    'sexo' : 'sexo' ,\r\n    'obesidad' : 'obesidad' ,\r\n    'habla_lengua_indi' : 'habla_lengua_indi' ,\r\n    'intubado' : 'intubado' ,\r\n    'fecha_actualizacion' : 'fecha_actualizacion' ,\r\n    'fecha_sintomas' : 'fecha_sintomas' ,\r\n    'diabetes' : 'diabetes' ,\r\n    'edad' : 'edad' ,\r\n    'resultado_lab' : 'resultado_lab' ,\r\n    'clas_final_escrita' : 'clas_final_escrita' ,\r\n    'pais_nacionalidad' : 'pais_nacionalidad' ,\r\n    'tabaquismo' : 'tabaquismo' ,\r\n    'otra_com' : 'otra_com' ,\r\n    'migrante' : 'migrante' ,\r\n    'resultado_antigeno' : 'resultado_antigeno' ,\r\n    'entidad_nac' : 'entidad_nac' ,\r\n    'otro_caso' : 'otro_caso' ,\r\n    'renal_cronica' : 'renal_cronica' \r\n}","import { removeRepeats } from './../../helpers/fun';\r\nimport moment from \"moment\";\r\nimport { types } from \"../types/types\";\r\nimport { parametros } from '../../helpers/parametros';\r\n\r\nconst initialState = {\r\n    datos : []  ,\r\n    parametros : [] ,\r\n    fecha : {} ,\r\n    numeroRegistros : 50 \r\n}\r\n\r\nexport const estadoReducer = ( state = initialState , action ) => {\r\n    switch ( action.type ) {\r\n        case types.datosGenerales:\r\n            return {\r\n                ...state , \r\n                datos : action.payload\r\n            }\r\n\r\n        case types.fechaDHoy : \r\n            return {\r\n                ...state ,\r\n                fecha : action.payload\r\n            }\r\n\r\n        case types.parametros : \r\n            return {\r\n                ...state ,\r\n                parametros : action.payload\r\n            }\r\n        case types.numeroRegistros :\r\n            return {\r\n                ...state ,\r\n                numeroRegistros : action.payload\r\n            }\r\n        \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getDatos = ( datosCompletos )=> {\r\n\r\n    const { records } = datosCompletos\r\n    return async( dispatch , getState  )=> {\r\n\r\n            const hoy = moment().format('DD-MM-YYYY')\r\n            const ayer  = moment().subtract(1 , 'd').format('DD-MM-YYYY')\r\n            const [ fechaHoy ] = removeRepeats( (records.map( dato => dato.record_timestamp )) )\r\n            console.log( fechaHoy )\r\n            const fechaRest = moment(fechaHoy[0]).format('DD-MM-YYYY')\r\n    \r\n            dispatch( putDatos( records ) ) \r\n            dispatch( diaHoy( hoy , ayer ,fechaRest ) )\r\n            dispatch( setParametros(parametros) )\r\n\r\n    \r\n\r\n    \r\n    \r\n    }\r\n}\r\n\r\n\r\nconst setParametros = ( facet ) => ({\r\n    type : types.parametros ,\r\n    payload :facet\r\n})\r\n\r\nconst diaHoy = ( hoy , ayer , fechaServidor )=> ({\r\n    type : types.fechaDHoy ,\r\n    payload: { hoy , ayer , fechaServidor}\r\n})\r\n\r\nconst putDatos = ( dGenerales )=> ({\r\n    type : types.datosGenerales,\r\n    payload: dGenerales\r\n})\r\n\r\nexport const setNumeroRegistros = ( numero ) => ({\r\n    type : types.numeroRegistros,\r\n    payload : numero\r\n})\r\n\r\n","export const parametrosHospitales = {\r\n    'estatus_capacidad_hospitalaria' : 'estatus_capacidad_hospitalaria',\r\n    'fecha' : 'fecha',\r\n    'coordenadas' : 'coordenadas',\r\n    'institucion' : 'institucion',\r\n    'nombre_hospital' : 'nombre_hospital',\r\n    'estatus_capacidad_uci' : 'estatus_capacidad_uci',\r\n}","import { formatearFechas, convertirFecha } from './../../helpers/fun';\r\nimport { parametrosHospitales } from '../../helpers/parametrosHopitales';\r\nimport { types } from './../types/types';\r\n\r\nconst initialState = {\r\n    datosH : []  ,\r\n    parametrosH : [] ,\r\n    fechaH : {} ,\r\n    fechaHInput: {},\r\n    numeroRegistrosH : 50,\r\n    nombresHospitales : []\r\n}\r\n\r\nexport const hospitalesReducer = ( state = initialState , action ) => {\r\n    switch ( action.type ){\r\n        case types.datosGeneralesHospitales:\r\n            return {\r\n                ...state , \r\n                datosH : action.payload\r\n            }\r\n\r\n        case types.fechaDHoyHospitales : \r\n            return {\r\n                ...state ,\r\n                fechaH : action.payload\r\n            }\r\n\r\n        case types.parametrosHospitales : \r\n            return {\r\n                ...state ,\r\n                parametrosH : action.payload\r\n            }\r\n        case types.numeroRegistrosHospitales :\r\n            return {\r\n                ...state ,\r\n                numeroRegistrosH : action.payload\r\n            }\r\n        case types.nombreHospitales :\r\n            return {\r\n                ...state ,\r\n                nombresHospitales : action.payload.nombres\r\n\r\n            }\r\n        case types.fechaInput :\r\n            return {\r\n                ...state ,\r\n                fechaHInput : action.payload\r\n            }\r\n    \r\n        \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const getDatosH = ( datosCompletos )=> {\r\n\r\n    const { records } = datosCompletos\r\n    console.log(records)\r\n    return async( dispatch , getState  )=> {\r\n\r\n        \r\n            dispatch( putDatos( records ) ) \r\n\r\n            dispatch( setParametros(parametrosHospitales) )\r\n\r\n    \r\n\r\n    \r\n    \r\n    }\r\n}\r\n\r\nexport const setInputFechaDuck = ( fechaI ) => {\r\n    \r\n\r\n    const [ fechaFormateada ] = convertirFecha(fechaI)\r\n\r\n    return async ( dispatch ) => {\r\n        dispatch( \r\n            setFechaInput( {\r\n                fechaI,\r\n                fechaFormateada\r\n            } )\r\n        )\r\n    }\r\n}\r\n\r\nexport const setNombreHospitales = ( nombres ) => (\r\n    {\r\n        type: types.nombreHospitales ,\r\n        payload: {\r\n            nombres\r\n        }\r\n    }\r\n)\r\n\r\nexport const fechaStageH = ( ) => {\r\n    let fecha = new Date() \r\n    let [hoy] = formatearFechas( fecha )\r\n    let [hoyF] = convertirFecha(hoy)\r\n\r\n    return async( dispatch , getState  )=> {\r\n        dispatch(\r\n            diaHoy({\r\n                hoy,\r\n                hoyF\r\n            })\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nconst setParametros = ( facet ) => ({\r\n    type : types.parametrosHospitales ,\r\n    payload :facet\r\n})\r\n\r\nexport const diaHoy = ( hoy , hoyF )=> ({\r\n    type : types.fechaDHoyHospitales ,\r\n    payload: {hoy , hoyF} \r\n})\r\n\r\n\r\n\r\nexport const putDatos = ( dGenerales )=> ({\r\n    type : types.datosGeneralesHospitales,\r\n    payload: dGenerales\r\n})\r\n\r\nexport const setNumeroRegistros = ( numero ) => ({\r\n    type : types.numeroRegistrosHospitales,\r\n    payload : numero\r\n})\r\n\r\nexport const setFechaInput = ( fecha ) => ({\r\n    type: types.fechaInput ,\r\n    payload: {fecha}\r\n})\r\n\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    \"titulo\" : '' ,\r\n    \"datos\" : [],\r\n    \"nombreHospitales\" : [] ,\r\n    \"parametros\" : [],\r\n    \"fecha\" : {} ,\r\n    \"markersRedux\" : []\r\n}\r\n\r\nexport const PlanetasDuck = ( state = initialState , action) => {\r\n    switch ( action.type ) {\r\n        case  types.datosPlanetas :\r\n            return {\r\n                ...state ,\r\n                datos : action.payload \r\n            }\r\n        case types.tituloPlanetas :\r\n            return {\r\n                ...state ,\r\n                titulo : action.payload\r\n                \r\n            }\r\n        case types.nombreHospitalesPlanetas :\r\n            return {\r\n                ...state ,\r\n                nombreHospitales : action.payload\r\n                \r\n            }\r\n        case types.parametrosPlanetas :\r\n            return {\r\n                ...state ,\r\n                parametros : action.payload\r\n            }\r\n        case types.fechaPlanetas :\r\n            return {\r\n                ...state ,\r\n                fecha : action.payload\r\n            }\r\n        case types.makers :\r\n            return {\r\n                ...state ,\r\n                markersRedux : action.payload\r\n            }\r\n        \r\n\r\n        default: \r\n        return state\r\n    }\r\n}\r\n\r\nexport const getHospitalesP = ( datos )=> {\r\n    \r\n    const { records , parameters:{facet} } = datos\r\n        const nombresH = records.map(record=> {\r\n            return record.fields.nombre_hospital\r\n        })\r\n        \r\n     \r\n    \r\n        return async( dispatch )=> {\r\n        \r\n        \r\n        dispatch(\r\n            setHospitalesp( records )\r\n        )\r\n\r\n        dispatch(\r\n            setTitulo('Datos Hospitalarios')\r\n        )\r\n\r\n        dispatch(\r\n            setNombresH( nombresH )\r\n        )\r\n        dispatch(\r\n            setParametrosH( facet )\r\n        )\r\n    }\r\n}\r\n\r\nexport const setFechaPlanetas = ( fecha ) => ({\r\n    type: types.fechaPlanetas ,\r\n    payload : fecha\r\n})\r\n\r\nexport const setMakers = ( makers ) => ({\r\n    type : types.makers ,\r\n    payload : makers\r\n})\r\n\r\nconst setHospitalesp = ( hospitales ) =>({\r\n    type: types.datosPlanetas ,\r\n    payload : hospitales\r\n})\r\n\r\nconst setTitulo = ( titulo ) => (\r\n    {\r\n        type : types.tituloPlanetas,\r\n        payload : titulo\r\n    }\r\n)\r\n\r\nconst setNombresH = ( nombres ) => (\r\n    {\r\n        type: types.nombreHospitalesPlanetas ,\r\n        payload : nombres\r\n    }\r\n)\r\n\r\nconst setParametrosH = ( parametros ) => (\r\n    {\r\n        type : types.parametrosPlanetas ,\r\n        payload : parametros\r\n    }\r\n)\r\n\r\n\r\n","import { combineReducers } from \"redux\";\r\nimport { estadoReducer } from \"../ducks/EstadosDuck\";\r\nimport { hospitalesReducer } from \"../ducks/HospitalesDuck\";\r\nimport { PlanetasDuck } from \"../ducks/PlanetasDuck\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    datos : estadoReducer ,\r\n    hospitales : hospitalesReducer ,\r\n    planetas : PlanetasDuck\r\n})","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"./rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer ,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n)","import React, { Fragment } from 'react'\r\n\r\nexport const Estado = (  {fields}  ) => {\r\n\r\n    const estiloRojo = {\r\n        backgroundColor : 'red',\r\n        color: 'white'\r\n    }\r\n    const { sector , sospechosos , indigena , fecha_ingreso , fecha_def , inmusupr , id_registro , entidad_res , tipo_paciente , uci , cardiovascular , clasificacion_final , neumonia , hipertension , entidad_um , toma_muestra_antigeno , epoc , asma , origen , toma_muestra_lab , nacionalidad , pais_origen , rango_edad , embarazo , municipio_res , sexo , obesidad , habla_lengua_indi , intubado , fecha_actualizacion , fecha_sintomas , diabetes , edad , resultado_lab , clas_final_escrita , pais_nacionalidad , tabaquismo , otra_com , migrante , resultado_antigeno , entidad_nac , otro_caso , renal_cronica  } = fields\r\n    return (\r\n        <Fragment>\r\n            <tr style={ fecha_def !== 'NA'?  estiloRojo : {}}>\r\n                <td>{ sector }</td>\r\n                <td>{ sospechosos }</td>\r\n                <td>{ indigena }</td>\r\n                <td>{ fecha_ingreso }</td>\r\n                <td>{ fecha_def }</td>\r\n                <td>{ inmusupr }</td>\r\n                <td>{ id_registro }</td>\r\n                <td>{ entidad_res }</td>\r\n                <td>{ tipo_paciente }</td>\r\n                <td>{ uci }</td>\r\n                <td>{ cardiovascular }</td>\r\n                <td>{ clasificacion_final }</td>\r\n                <td>{ neumonia }</td>\r\n                <td>{ hipertension }</td>\r\n                <td>{ entidad_um }</td>\r\n                <td>{ toma_muestra_antigeno }</td>\r\n                <td>{ epoc }</td>\r\n                <td>{ asma }</td>\r\n                <td>{ origen }</td>\r\n                <td>{ toma_muestra_lab }</td>\r\n                <td>{ nacionalidad }</td>\r\n                <td>{ pais_origen }</td>\r\n                <td>{ rango_edad }</td>\r\n                <td>{ embarazo }</td>\r\n                <td>{ municipio_res }</td>\r\n                <td>{ sexo }</td>\r\n                <td>{ obesidad }</td>\r\n                <td>{ habla_lengua_indi }</td>\r\n                <td>{ intubado }</td>\r\n                <td>{ fecha_actualizacion }</td>\r\n                <td>{ fecha_sintomas }</td>\r\n                <td>{ diabetes }</td>\r\n                <td>{ edad }</td>\r\n                <td>{ resultado_lab }</td>\r\n                <td>{ clas_final_escrita }</td>\r\n                <td>{ pais_nacionalidad }</td>\r\n                <td>{ tabaquismo }</td>\r\n                <td>{ otra_com }</td>\r\n                <td>{ migrante }</td>\r\n                <td>{ resultado_antigeno }</td>\r\n                <td>{ entidad_nac }</td>\r\n                <td>{ otro_caso }</td>\r\n                <td>{ renal_cronica }</td>\r\n\r\n            </tr>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react'\r\n\r\nconst Parametros = ({ parametros }) => {\r\n\r\n\r\nconst { sector , sospechosos , indigena , fecha_ingreso , fecha_def , inmusupr , id_registro , entidad_res , tipo_paciente , uci , cardiovascular , clasificacion_final , neumonia , hipertension , entidad_um , toma_muestra_antigeno , epoc , asma , origen , toma_muestra_lab , nacionalidad , pais_origen , rango_edad , embarazo , municipio_res , sexo , obesidad , habla_lengua_indi , intubado , fecha_actualizacion , fecha_sintomas , diabetes , edad , resultado_lab , clas_final_escrita , pais_nacionalidad , tabaquismo , otra_com , migrante , resultado_antigeno , entidad_nac , otro_caso , renal_cronica  } = parametros\r\n\r\n    return (\r\n        <Fragment>\r\n        \r\n                <th>{ sector }</th>\r\n                <th>{ sospechosos }</th>\r\n                <th>{ indigena }</th>\r\n                <th>{ fecha_ingreso }</th>\r\n                <th>{ fecha_def }</th>\r\n                <th>{ inmusupr }</th>\r\n                <th>{ id_registro }</th>\r\n                <th>{ entidad_res }</th>\r\n                <th>{ tipo_paciente }</th>\r\n                <th>{ uci }</th>\r\n                <th>{ cardiovascular }</th>\r\n                <th>{ clasificacion_final }</th>\r\n                <th>{ neumonia }</th>\r\n                <th>{ hipertension }</th>\r\n                <th>{ entidad_um }</th>\r\n                <th>{ toma_muestra_antigeno }</th>\r\n                <th>{ epoc }</th>\r\n                <th>{ asma }</th>\r\n                <th>{ origen }</th>\r\n                <th>{ toma_muestra_lab }</th>\r\n                <th>{ nacionalidad }</th>\r\n                <th>{ pais_origen }</th>\r\n                <th>{ rango_edad }</th>\r\n                <th>{ embarazo }</th>\r\n                <th>{ municipio_res }</th>\r\n                <th>{ sexo }</th>\r\n                <th>{ obesidad }</th>\r\n                <th>{ habla_lengua_indi }</th>\r\n                <th>{ intubado }</th>\r\n                <th>{ fecha_actualizacion }</th>\r\n                <th>{ fecha_sintomas }</th>\r\n                <th>{ diabetes }</th>\r\n                <th>{ edad }</th>\r\n                <th>{ resultado_lab }</th>\r\n                <th>{ clas_final_escrita }</th>\r\n                <th>{ pais_nacionalidad }</th>\r\n                <th>{ tabaquismo }</th>\r\n                <th>{ otra_com }</th>\r\n                <th>{ migrante }</th>\r\n                <th>{ resultado_antigeno }</th>\r\n                <th>{ entidad_nac }</th>\r\n                <th>{ otro_caso }</th>\r\n                <th>{ renal_cronica }</th>\r\n        \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Parametros\r\n","\r\nimport React, { Fragment, useEffect } from 'react'\r\nimport { useIndexedDB } from 'react-indexed-db'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { yaEstaEnBase } from '../helpers/fun'\r\nimport { setNumeroRegistros } from '../redux/ducks/EstadosDuck'\r\nimport { Estado } from './Estado'\r\nimport Parametros from './Parametros'\r\n\r\n\r\n\r\n\r\nexport const EstadosComponent = () => {\r\n\r\n    const db = useIndexedDB('covFechas')\r\n    const dispatch = useDispatch()\r\n    const { datos , fecha:{ fechaServidor } , parametros , numeroRegistros  } = useSelector(state => state.datos)\r\n\r\n    \r\n    \r\n    if (datos.length === 0) {\r\n        console.log( 'no llegaron' );\r\n    }\r\n\r\n    const handleChange = ( e )=> {\r\n        console.log(e.target.value)\r\n        dispatch(\r\n            setNumeroRegistros( e.target.value )\r\n        )\r\n        \r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if ( fechaServidor !== '' ||  datos.length > 0) {\r\n            db.add({\r\n                'fecha' : fechaServidor,\r\n                'datos' : datos\r\n            }).then(e => {\r\n                console.log(e)\r\n            })\r\n        }\r\n\r\n        db.getAll().then(res => {\r\n            \r\n        const { arrSinDuplicaciones } =  yaEstaEnBase( res )\r\n            console.log( arrSinDuplicaciones );\r\n        })\r\n\r\n        console.log(numeroRegistros)\r\n\r\n\r\n\r\n    }, [datos, db, fechaServidor, numeroRegistros])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"m-5\">\r\n    \r\n            <h1>Estados</h1>\r\n                <div className=\"row\">\r\n                <input \r\n                    type=\"number\" \r\n                    name=\"Numberr\" \r\n                    id=\"inputNumberr\" \r\n                    className=\"form-control\" \r\n                    defaultValue \r\n                    min={ 100 } \r\n                    max={ 1000 } \r\n                    step={ 100 } \r\n                    required=\"required\"\r\n                    onChange={ (e)=> handleChange(e) }\r\n\r\n                    />\r\n\r\n                </div>\r\n            <div className=\"table-responsive\" style={ {\r\n                height: '80vh'\r\n            } }>\r\n            <table className=\"table table-hover  table-dark \">\r\n            <thead style={{\r\n            \r\n                backgroundColor:'#01599d'\r\n            }}>\r\n                <tr>\r\n                    { \r\n                        <Fragment>\r\n                            <Parametros  parametros={ parametros }  />\r\n                        </Fragment>\r\n                    \r\n                    }\r\n                </tr>\r\n            \r\n            </thead>\r\n            <tbody>\r\n\r\n            {\r\n                datos.map(({ recordid  , fields }) => {\r\n\r\n                    return (\r\n                        <Fragment key={ recordid }>\r\n                            <Estado fields={ fields } />\r\n                        </Fragment>\r\n                    )\r\n                })\r\n            }\r\n                \r\n                \r\n            </tbody>\r\n        </table>\r\n            </div>\r\n            \r\n        \r\n\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const urlGeneral = ( cantidad = 100 ) => {\r\n    return  `https://datos.cdmx.gob.mx/api/records/1.0/search/?dataset=casos-asociados-a-covid-19&q=&rows=${cantidad}&facet=fecha_actualizacion&facet=id_registro&facet=sector&facet=entidad_um&facet=sexo&facet=entidad_nac&facet=entidad_res&facet=municipio_res&facet=tipo_paciente&facet=fecha_ingreso&facet=fecha_def&facet=edad&facet=nacionalidad&facet=rango_edad&facet=resultado_lab&facet=clasificacion_final&facet=clas_final_escrita&facet=confirmados&facet=sospechosos&facet=negativos&refine.entidad_res=CIUDAD+DE+M%C3%89XICO`;\r\n}\r\nexport const urlHospitales = ( cantidad = 100 , fecha = '2020%2F12%2F20') => {\r\n    return  `https://datos.cdmx.gob.mx/api/records/1.0/search/?dataset=capacidad-hospitalaria&q=&rows=${cantidad}&facet=fecha&facet=nombre_hospital&facet=institucion&facet=estatus_capacidad_hospitalaria&facet=estatus_capacidad_uci&refine.fecha=${fecha}`;\r\n}\r\n\r\n","import { losDatos } from './../helpers/fun';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport React, { useEffect } from 'react'\r\nimport { EstadosComponent } from './EstadosComponent';\r\nimport { getDatos } from '../redux/ducks/EstadosDuck';\r\nimport { urlGeneral } from '../helpers/urls';\r\n\r\nexport const Contenedor = () => {\r\n    const dispatch = useDispatch()\r\n    const { numeroRegistros } = useSelector(state => state.datos)\r\n    \r\n\r\n    useEffect(() => {\r\n        try {\r\n            console.log(numeroRegistros)\r\n            const url = urlGeneral( numeroRegistros )\r\n            console.log( url )\r\n            losDatos( url ).then( res => {\r\n                dispatch(\r\n                    getDatos( res )\r\n                )\r\n        \r\n            })\r\n            \r\n        } catch (e) {\r\n            \r\n        } \r\n\r\n\r\n    }, [dispatch, numeroRegistros])\r\n\r\n\r\n    return (\r\n        <div style={{\r\n            backgroundColor:'white'\r\n        }}>\r\n            <EstadosComponent />\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport { alertas } from '../../helpers/fun'\r\n\r\nexport const Hospital = ( {fields} ) => {\r\n    const { estatus_capacidad_hospitalaria , fecha , coordenadas , institucion , nombre_hospital , estatus_capacidad_uci  } = fields\r\n\r\n    return (\r\n        <Fragment>\r\n        <tr >\r\n                <td style={ \r\n            alertas( estatus_capacidad_hospitalaria )\r\n        }>{estatus_capacidad_hospitalaria}</td>\r\n                <td>{fecha}</td>\r\n                <td>{coordenadas}</td>\r\n                <td>{institucion}</td>\r\n                <td>{nombre_hospital}</td>\r\n                <td>{estatus_capacidad_uci}</td>\r\n        </tr>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react'\r\n\r\nexport const ParametrosHospital = ({parametrosH}) => {\r\n\r\n    const { estatus_capacidad_hospitalaria , fecha , coordenadas , institucion , nombre_hospital , estatus_capacidad_uci  } = parametrosH\r\n\r\n    return (\r\n        <Fragment>\r\n                <td>{estatus_capacidad_hospitalaria}</td>\r\n                <td>{fecha}</td>\r\n                <td>{coordenadas}</td>\r\n                <td>{institucion}</td>\r\n                <td>{nombre_hospital}</td>\r\n                <td>{estatus_capacidad_uci}</td>\r\n        </Fragment>\r\n    )\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport { setInputFechaDuck, setNombreHospitales , putDatos} from './../../redux/ducks/HospitalesDuck';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\nimport { Hospital } from './Hospital';\r\nimport { ParametrosHospital } from './ParametrosHospital';\r\nimport { convertirFecha, losDatos } from '../../helpers/fun';\r\nimport { urlHospitales } from '../../helpers/urls';\r\n\r\n\r\nexport const HospitalesComponent = () => {\r\n\r\n    // https://github.com/dieguezguille/ThreeAct-Test\r\n    const {datosH , parametrosH , nombresHospitales , fechaHInput} = useSelector(state => state.hospitales)\r\n    const dispatch = useDispatch()\r\n    const [fechaInputS, setFechaIntputS] = useState('');\r\n\r\n    const handleChange = ( e ) => {\r\n        let fecha = e.target.value\r\n        \r\n        setFechaIntputS( fecha )\r\n\r\n    }\r\n\r\n    useEffect(()=> {\r\n        \r\n        let nombresDeLosHospitales = datosH.map((datoH) => {\r\n                    return datoH.fields.nombre_hospital\r\n                })\r\n\r\n                \r\n        dispatch(\r\n            setNombreHospitales(\r\n                nombresDeLosHospitales\r\n            )\r\n        )\r\n\r\n        dispatch(\r\n            setInputFechaDuck(fechaInputS)\r\n        )\r\n\r\n    },[fechaInputS , datosH , dispatch ])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"m-5\">\r\n    \r\n            <h1>Hospitales</h1>\r\n                                <div className=\"row\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"exampleSelect\">Buscar por hospital</label>\r\n                        <select className=\"custom-select\" id=\"exampleSelect\">\r\n                            {\r\n                                nombresHospitales.map(nombre=>{\r\n                                    return(\r\n                                        <Fragment key={nombre}>\r\n                                            <option value={nombre}>{nombre}</option>\r\n                                        </Fragment>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n\r\n    \r\n\r\n                <input \r\n                    type=\"number\" \r\n                    name=\"Numberr\" \r\n                    id=\"inputNumberr\" \r\n                    className=\"form-control\" \r\n                    defaultValue \r\n                    min={ 100 } \r\n                    max={ 1000 } \r\n                    step={ 100 } \r\n                    required=\"required\"\r\n                    // onChange={ (e)=> handleChange(e) }\r\n\r\n                    />\r\n\r\n                    <input className=\"form-control\" onChange={(e)=> handleChange(e) }  type=\"date\" />\r\n\r\n                </div>\r\n            <div className=\"table-responsive\" style={ {\r\n                height: '80vh'\r\n            } }>\r\n            <table className=\"table table-hover   table-dark \">\r\n            <thead style={{\r\n            \r\n                backgroundColor:'#292b2c'\r\n            }}>\r\n                <tr>\r\n                    { \r\n                        <Fragment>\r\n                            <ParametrosHospital  parametrosH={ parametrosH }  />\r\n                        </Fragment>\r\n                    \r\n                    }\r\n                </tr>\r\n            \r\n            </thead>\r\n            <tbody>\r\n\r\n            {\r\n                datosH.map(({ recordid  , fields }) => {\r\n\r\n                    return (\r\n                        <Fragment key={ recordid }>\r\n                            <Hospital fields={ fields } />\r\n                        </Fragment>\r\n                    )\r\n                })\r\n            }\r\n                \r\n                \r\n            </tbody>\r\n        </table>\r\n            </div>\r\n            \r\n        \r\n\r\n        </div>\r\n    )\r\n}\r\n","import { fechaStageH } from './../../redux/ducks/HospitalesDuck';\r\nimport React, { useEffect } from 'react'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { formatearFechas, losDatos } from '../../helpers/fun'\r\nimport { urlHospitales } from '../../helpers/urls'\r\nimport { getDatosH } from '../../redux/ducks/HospitalesDuck'\r\nimport { HospitalesComponent } from './HospitalesComponent';\r\n\r\nexport const ContenedorHospitales = () => {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const { numeroRegistrosHospitales } = useSelector(state => state.hospitales)\r\n    \r\n    useEffect(() => {\r\n        \r\n        const hoy = new Date()\r\n        const [ hoyF ] = formatearFechas( hoy )\r\n        console.log(hoyF);\r\n        try {\r\n            dispatch(\r\n                fechaStageH()\r\n            )\r\n            const url = urlHospitales( numeroRegistrosHospitales , '2020%2F1%2F1')\r\n            console.log(url )\r\n            losDatos( url ).then(result => {\r\n                    \r\n                dispatch(\r\n                    getDatosH( result )\r\n                )\r\n                            \r\n        \r\n            })\r\n        } catch (e) {\r\n        \r\n        }\r\n    },[dispatch , numeroRegistrosHospitales])\r\n\r\n\r\n    return (\r\n\r\n        <div style={{\r\n            backgroundColor:'white'\r\n        }}>\r\n    \r\n            <HospitalesComponent/>\r\n    \r\n        </div>\r\n    )\r\n}\r\n","export const markerEjemplo = \r\n[\r\n    {\"position\":[0,0,0], id:0,\"cameraPos\":[18,18,18],\"name\":\"camaraCentral\",\"loc\":[],\"estatus_capacidad_hospitalaria\":\"\"},{\"position\":[10,76,45],\"cameraPos\":[10,76,55],\"name\":\"INER\",\"id\":1,\"loc\":[19.291375,-99.158653],\"estatus_capacidad_hospitalaria\":\"Buena\"},{\"position\":[27,-79,-85],\"cameraPos\":[27,-79,-75],\"name\":\"HOSPITAL DE PEDIATRIA 01 CMN SIGLO XXI (CDMX SUR)\",\"id\":2,\"loc\":[19.407458,-99.152267],\"estatus_capacidad_hospitalaria\":\"Buena\"},{\"position\":[-11,25,45],\"cameraPos\":[-11,25,55],\"name\":\"HOSPITAL GENERAL DE ZONA 01 CARLOS MC GREGOR (CDMX SUR)\",\"id\":3,\"loc\":[19.395912,-99.16161],\"estatus_capacidad_hospitalaria\":\"Crítica\"},{\"position\":[27,-26,9],\"cameraPos\":[27,-26,19],\"name\":\"HOSPITAL GENERAL DE ZONA C/UMAA 48 (CDMX NORTE)\",\"id\":4,\"loc\":[19.482375,-99.213046],\"estatus_capacidad_hospitalaria\":\"Crítica\"},{\"position\":[-75,88,-57],\"cameraPos\":[-75,88,-47],\"name\":\"HOSPITAL GENERAL 02 (CDMX SUR) VILLA COAPA (COY.)\",\"id\":5,\"loc\":[19.309194,-99.129593],\"estatus_capacidad_hospitalaria\":\"Crítica\"},{\"position\":[28,34,-32],\"cameraPos\":[28,34,-22],\"name\":\"HOSPITAL GENERAL DE ZONA C/MF 29 (S. JUAN ARAGÓN)\",\"id\":6,\"loc\":[19.465117,-99.085162],\"estatus_capacidad_hospitalaria\":\"Crítica\"},{\"position\":[54,-63,44],\"cameraPos\":[54,-63,54],\"name\":\"HOSPITAL GENERAL DE ZONA 47 (CDMX SUR) (IZP)\",\"id\":7,\"loc\":[19.357566,-99.054269],\"estatus_capacidad_hospitalaria\":\"Crítica\"},{\"position\":[60,-91,79],\"cameraPos\":[60,-91,89],\"name\":\"UNIDAD MÓVIL TEMPORAL COVID\",\"id\":8,\"loc\":[19.403082,-99.089177],\"estatus_capacidad_hospitalaria\":\"Crítica\"},{\"position\":[-94,95,59],\"cameraPos\":[-94,95,69],\"name\":\"CRIT IZTAPALAPA\",\"id\":9,\"loc\":[19.328321,-99.06853],\"estatus_capacidad_hospitalaria\":\"Sin dato\"},{\"position\":[11,-99,-81],\"cameraPos\":[11,-99,-71],\"name\":\"HOSPITAL GENERAL DE ZONA 194\",\"id\":10,\"loc\":[19.57007,-99.044009],\"estatus_capacidad_hospitalaria\":\"Crítica\"},{\"position\":[-96,-69,69],\"cameraPos\":[-96,-69,79],\"name\":\"HOSPITAL GENERAL DE ZONA 57 (LA QUEBRADA)\",\"id\":11,\"loc\":[19.542797,-99.205022],\"estatus_capacidad_hospitalaria\":\"Crítica\"},{\"position\":[78,-64,-26],\"cameraPos\":[78,-64,-16],\"name\":\"HOSPITAL GENERAL DE ZONA 58 (LAS MARGARITAS)\",\"id\":12,\"loc\":[19.529016,-99.030983],\"estatus_capacidad_hospitalaria\":\"Crítica\"},{\"position\":[58,-80,98],\"cameraPos\":[58,-80,108],\"name\":\"CRIT NEZAHUALCÓYOTL\",\"id\":13,\"loc\":[19.425795,-99.029987],\"estatus_capacidad_hospitalaria\":\"Sin dato\"},{\"position\":[-39,-78,-29],\"cameraPos\":[-39,-78,-19],\"name\":\"CENTRO MEDICO 20 DE NOVIEMBRE\",\"id\":14,\"loc\":[19.37272,-99.171205],\"estatus_capacidad_hospitalaria\":\"Crítica\"},{\"position\":[-64,-16,-31],\"cameraPos\":[-64,-16,-21],\"name\":\"HG DARIO FERNANDEZ FIERRO\",\"id\":15,\"loc\":[19.363602,-99.188608],\"estatus_capacidad_hospitalaria\":\"Crítica\"},{\"position\":[41,-42,-31],\"cameraPos\":[41,-42,-21],\"name\":\"HG TACUBA\",\"id\":16,\"loc\":[19.454384,-99.191231],\"estatus_capacidad_hospitalaria\":\"Crítica\"},{\"position\":[25,-59,51],\"cameraPos\":[25,-59,61],\"name\":\"HR LIC. ADOLFO LÓPEZ MATEOS\",\"id\":17,\"loc\":[19.358451,-99.172716],\"estatus_capacidad_hospitalaria\":\"Media\"},{\"position\":[22,73,-97],\"cameraPos\":[22,73,-87],\"name\":\"HR BICENTENARIO DE LA INDEPENDENCIA\",\"id\":18,\"loc\":[19.628814,-99.163343],\"estatus_capacidad_hospitalaria\":\"Crítica\"},{\"position\":[86,-46,51],\"cameraPos\":[86,-46,61],\"name\":\"H.M.Z. EL VERGEL IZTAPALAPA\",\"id\":19,\"loc\":[19.3131938,-99.0836122],\"estatus_capacidad_hospitalaria\":\"Sin dato\"},{\"position\":[-96,75,-41],\"cameraPos\":[-96,75,-31],\"name\":\"U.O.H. 6/O BATALLÓN DE FUERZAS ESPECIALES\",\"id\":20,\"loc\":[19.1922707,-98.8578722],\"estatus_capacidad_hospitalaria\":\"Crítica\"},{\"position\":[29,-15,-24],\"cameraPos\":[29,-15,-14],\"name\":\"HOSPITAL REGIONAL TLALNEPANTLA ISSEMYM\",\"id\":21,\"loc\":[19.521706,-99.187341],\"estatus_capacidad_hospitalaria\":\"Crítica\"},{\"position\":[45,60,-89],\"cameraPos\":[45,60,-79],\"name\":\"HOSPITAL GENERAL DE NAUCALPAN \\\"DR. MAXIMILIANO RUIZ CASTAÑEDA\\\"\",\"id\":22,\"loc\":[19.468662,-99.234348],\"estatus_capacidad_hospitalaria\":\"Media\"},{\"position\":[-39,-28,46],\"cameraPos\":[-39,-28,56],\"name\":\"HOSPITAL GENERAL CUAUTITLAN \\\"GRAL. JOSE VICENTE VILLADA\\\"\",\"id\":23,\"loc\":[19.664586,-99.178557],\"estatus_capacidad_hospitalaria\":\"Crítica\"},{\"position\":[14,0,88],\"cameraPos\":[14,0,98],\"name\":\"HOSPITAL GENERAL NEZAHUALCOYOTL \\\"LA PERLA\\\"\",\"id\":24,\"loc\":[19.387963,-98.989442],\"estatus_capacidad_hospitalaria\":\"Buena\"},{\"position\":[46,-78,-47],\"cameraPos\":[46,-78,-37],\"name\":\"HOSPITAL GENERAL DE CHALCO\",\"id\":25,\"loc\":[19.268265,-98.893965],\"estatus_capacidad_hospitalaria\":\"Media\"},{\"position\":[-52,-73,-50],\"cameraPos\":[-52,-73,-40],\"name\":\"INSTITUTO NACIONAL DE NUTRICIÓN\",\"id\":26,\"loc\":[19.289599,-99.155441],\"estatus_capacidad_hospitalaria\":\"Crítica\"},{\"position\":[29,95,-14],\"cameraPos\":[29,95,-4],\"name\":\"HOSPITAL GENERAL DE MÉXICO\",\"id\":27,\"loc\":[19.4129258,-99.1520225],\"estatus_capacidad_hospitalaria\":\"Crítica\"},{\"position\":[-2,6,-44],\"cameraPos\":[-2,6,-34],\"name\":\"HOSPITAL JUAREZ\",\"id\":28,\"loc\":[19.481829,-99.135576],\"estatus_capacidad_hospitalaria\":\"Crítica\"},{\"position\":[89,24,-14],\"cameraPos\":[89,24,-4],\"name\":\"HOSPITAL INFANTIL DE MÉXICO FEDERICO GÓMEZ\",\"id\":29,\"loc\":[19.410839,-99.151941],\"estatus_capacidad_hospitalaria\":\"Buena\"},{\"position\":[7,79,-83],\"cameraPos\":[7,79,-73],\"name\":\"INSTITUTO  NACIONAL DE CARDIOLOGÍA IGNACIO CHÁVEZ\",\"id\":30,\"loc\":[19.290598,-99.153838],\"estatus_capacidad_hospitalaria\":\"Media\"},{\"position\":[27,39,65],\"cameraPos\":[27,39,75],\"name\":\"HOSPITAL REGIONAL DE ALTA ESPECIALIDAD DE IXTAPALUCA\",\"id\":31,\"loc\":[19.318796,-98.855353],\"estatus_capacidad_hospitalaria\":\"Crítica\"},{\"position\":[-77,75,-53],\"cameraPos\":[-77,75,-43],\"name\":\"ENRIQUE CABRERA\",\"id\":32,\"loc\":[19.361675,-99.224432],\"estatus_capacidad_hospitalaria\":\"Crítica\"},{\"position\":[92,65,-47],\"cameraPos\":[92,65,-37],\"name\":\"PEDIATRICO DE LA VILLA\",\"id\":33,\"loc\":[19.487355,-99.114316],\"estatus_capacidad_hospitalaria\":\"Buena\"},{\"position\":[-65,67,13],\"cameraPos\":[-65,67,23],\"name\":\"HOSPITAL GENERAL IZTAPALAPA\",\"id\":34,\"loc\":[19.343426,-99.027236],\"estatus_capacidad_hospitalaria\":\"Crítica\"},{\"position\":[-1,-88,46],\"cameraPos\":[-1,-88,56],\"name\":\"HOSPITAL GENERAL XOCO\",\"id\":35,\"loc\":[19.360313,-99.162275],\"estatus_capacidad_hospitalaria\":\"Crítica\"},{\"position\":[-30,-90,48],\"cameraPos\":[-30,-90,58],\"name\":\"HOSPITAL GENERAL DR. RUBÉN LEÑERO\",\"id\":36,\"loc\":[19.451398,-99.169565],\"estatus_capacidad_hospitalaria\":\"Crítica\"},{\"position\":[-62,-9,42],\"cameraPos\":[-62,-9,52],\"name\":\"HOSPITAL TEPEPAN\",\"id\":37,\"loc\":[19.275806,-99.144298],\"estatus_capacidad_hospitalaria\":\"Sin dato\"},{\"position\":[66,81,52],\"cameraPos\":[66,81,62],\"name\":\"HOSPITAL GENERAL DE ZONA 1A PARQUE DE LOS VENADOS (CDMX SUR)\",\"id\":38,\"loc\":[19.374431,-99.151203],\"estatus_capacidad_hospitalaria\":\"Crítica\"},{\"position\":[-50,85,-55],\"cameraPos\":[-50,85,-45],\"name\":\"HOSPITAL GENERAL DE ZONA 27 (CDMX NORTE)\",\"id\":39,\"loc\":[19.454776,-99.140007],\"estatus_capacidad_hospitalaria\":\"Crítica\"},{\"position\":[4,-27,74],\"cameraPos\":[4,-27,84],\"name\":\"HOSPITAL GENERAL DE ZONA C/MF 08 (CDMX SUR)\",\"id\":40,\"loc\":[19.337137,-99.200142],\"estatus_capacidad_hospitalaria\":\"Crítica\"},{\"position\":[-67,50,-31],\"cameraPos\":[-67,50,-21],\"name\":\"HOSPITAL GENERAL DE ZONA 197\",\"id\":41,\"loc\":[19.530797,-99.222446],\"estatus_capacidad_hospitalaria\":\"Crítica\"},{\"position\":[-5,16,67],\"cameraPos\":[-5,16,77],\"name\":\"HOSPITAL GENERAL DE ZONA 68 (TULPETLAC)\",\"id\":42,\"loc\":[19.742905,-98.972971],\"estatus_capacidad_hospitalaria\":\"Crítica\"},{\"position\":[-69,55,14],\"cameraPos\":[-69,55,24],\"name\":\"HOSPITAL GENERAL DE ZONA 71 (CHALCO)\",\"id\":43,\"loc\":[19.356913,-98.990929],\"estatus_capacidad_hospitalaria\":\"Crítica\"},{\"position\":[-89,62,-50],\"cameraPos\":[-89,62,-40],\"name\":\"HOSPITAL GENERAL DE ZONA 76 (XALOSTOC)\",\"id\":44,\"loc\":[19.515133,-98.89145],\"estatus_capacidad_hospitalaria\":\"Crítica\"},{\"position\":[7,-77,1],\"cameraPos\":[7,-77,11],\"name\":\"HOSPITAL GENERAL DE ZONA 98 (COACALCO)\",\"id\":45,\"loc\":[19.4703,-99.234208],\"estatus_capacidad_hospitalaria\":\"Crítica\"},{\"position\":[-79,-12,69],\"cameraPos\":[-79,-12,79],\"name\":\"HG JOSE MARIA MORELOS\",\"id\":46,\"loc\":[19.363918,-98.995393],\"estatus_capacidad_hospitalaria\":\"Media\"},{\"position\":[46,65,-30],\"cameraPos\":[46,65,-20],\"name\":\"HG DR FERNANDO QUIROZ\",\"id\":47,\"loc\":[19.394242,-99.194187],\"estatus_capacidad_hospitalaria\":\"Crítica\"},{\"position\":[-83,80,99],\"cameraPos\":[-83,80,109],\"name\":\"HR PRIMERO DE OCTUBRE\",\"id\":48,\"loc\":[19.486751,-99.133249],\"estatus_capacidad_hospitalaria\":\"Crítica\"},{\"position\":[-3,37,39],\"cameraPos\":[-3,37,49],\"name\":\"HOSPITAL CENTRAL MILITAR\",\"id\":49,\"loc\":[19.4373709,-99.216054],\"estatus_capacidad_hospitalaria\":\"Crítica\"},{\"position\":[87,3,-76],\"cameraPos\":[87,3,-66],\"name\":\"HOSPITAL MILITAR DE ESPCIALIDADES DE LA MUJER Y NEONATOLOGÍA\",\"id\":50,\"loc\":[19.4394142,-99.2207869],\"estatus_capacidad_hospitalaria\":\"Crítica\"}\r\n]\r\n","import React, { useRef } from \"react\";\r\nimport { OrbitControls } from \"drei\";\r\nimport { useThree, useFrame } from \"react-three-fiber\";\r\n\r\nexport const Controls = ({\r\n    autoRotate,\r\n    enabled,\r\n    target\r\n  }) => {\r\n    const controls = useRef();\r\n    const { camera, gl } = useThree();\r\n\r\n    useFrame(() => {\r\n        if (controls && controls.current && controls.current.update && enabled) {\r\n            controls.current?.update();\r\n        }\r\n    });\r\n\r\n    return enabled ? <OrbitControls\r\n        enabled={enabled}\r\n        ref={controls}\r\n        target={target}\r\n        args={[camera, gl.domElement]}\r\n        enableDamping\r\n        enableZoom={true}\r\n        enableKeys={false}\r\n        enablePan={false}\r\n        dampingFactor={0.1}\r\n        rotateSpeed={0.3}\r\n        autoRotate={autoRotate}\r\n        autoRotateSpeed={0.4}/> :\r\n        null\r\n}\r\n\r\n","import { useThree } from \"react-three-fiber\";\r\n\r\nexport const Navigation = ({\r\n  cameraPosition,\r\n  cameraTarget,\r\n}) => {\r\n\r\n  const { camera } = useThree();\r\n  camera.position.set(...cameraPosition);\r\n  camera.lookAt(...cameraTarget);\r\n  camera.updateProjectionMatrix();\r\n\r\n  return null;\r\n}\r\n\r\n","import { useState } from \"react\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport Nav from \"react-bootstrap/esm/Nav\";\r\nimport React from \"react\";\r\n\r\nexport const NavLink = (props)  => {\r\n\r\n  const [hovered, setHovered] = useState(false);\r\n  const AnimatedNavLink = animated(Nav.Link);\r\n\r\n  const linkSpring = useSpring({\r\n    transform: hovered ? 'scale(1.1)' : 'scale(1)',\r\n    padding: 3,\r\n    margin: '0.5rem 1rem',\r\n    borderRadius: '5px',\r\n    backgroundColor: hovered ? 'rgba(0, 0, 0, 0.4)' : 'rgba(0, 0, 0, 0)',\r\n    color : 'white'\r\n  })\r\n\r\n  const handleOnMouseOver = (e)=> {\r\n    console.log( e )\r\n    alert('asdsad')\r\n  }\r\n\r\n  const onMouseLeaveS=() =>{\r\n    console.log(\"Event:MouseLeave\");\r\n  }\r\n\r\n  return (\r\n    <AnimatedNavLink onPointerOver={e => setHovered(true)} \r\n                      onPointerOut={e => setHovered(false)} \r\n                      style={{...linkSpring}} \r\n                      onClick={() => props.onNavLinkClicked(props.id , props.position , props.cameraPos)}\r\n                      onMouseEnter={e=>onMouseLeaveS(e)}>\r\n      {props.name}\r\n    </AnimatedNavLink>\r\n  );\r\n}\r\n\r\n","import React, { Fragment } from 'react'\r\nimport { NavLink } from '../NavLink/NavLink';\r\n\r\nexport const NavH = ( { markers , onNavigationItemClicked} ) => {\r\n    const onMouseLeaveS=() =>{\r\n        console.log(\"Event:MouseLeave\");\r\n    }\r\n    \r\n    return (\r\n    <Fragment>\r\n        {\r\n            markers ? (\r\n                markers.map(marker =>(\r\n                <NavLink\r\n                key = { marker.id } \r\n                        id = { marker.id }\r\n                        name = { marker.name }\r\n                        cameraPos={marker.cameraPos}\r\n                        position={ marker.position }\r\n                        onNavLinkClicked= { onNavigationItemClicked}\r\n                        onMouseEnter={onMouseLeaveS}\r\n                />\r\n            ))\r\n        ) : null\r\n    }\r\n    </Fragment>\r\n\r\n    //     <Fragment>\r\n    //         <NavLink\r\n    //     id={1}\r\n    //     name={markers[1].name}\r\n    //     onNavLinkClicked={onNavigationItemClicked}>\r\n    // </NavLink>\r\n    // <NavLink\r\n    //     id={2}\r\n    //     name={markers[2].name}\r\n    //     onNavLinkClicked={onNavigationItemClicked}>\r\n    // </NavLink>\r\n    // <NavLink\r\n    //     id={3}\r\n    //     name={markers[3].name}\r\n    //     onNavLinkClicked={onNavigationItemClicked}>\r\n    // </NavLink>\r\n    //     </Fragment>\r\n    \r\n    )\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Nav } from 'react-bootstrap';\r\nimport React, { Fragment } from 'react'\r\nimport { NavH } from './NavH';\r\n\r\nexport const NavsHospitales = ({ markers, onNavigationItemClicked , handleChangeDate }) => {\r\n    const { titulo } = useSelector(state => state.planetas)\r\n    \r\n    return (\r\n        <Fragment>\r\n            <h2 className=\"title\"\r\n                onClick={() => onNavigationItemClicked(0)}>\r\n                {\r\n                    titulo\r\n                }\r\n            </h2>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    id=\"exampleInputEmail1\"\r\n                    aria-describedby=\"emailHelp\"\r\n                    onChange={ (e)=> handleChangeDate(e) }/>\r\n            </div>\r\n\r\n            <div className=\"cH\">\r\n            \r\n            <Nav defaultActiveKey=\"/home\" className=\"flex-column\">\r\n                \r\n                <NavH\r\n                    markers={markers}\r\n                    onNavigationItemClicked={onNavigationItemClicked}\r\n                />\r\n            </Nav>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/clickEs.cd48479c.mp3\";","import React, { } from \"react\";\r\nimport { Html } from \"drei\";\r\nimport Nav from \"react-bootstrap/esm/Nav\";\r\nimport { useSpring, animated, config } from \"react-spring\";\r\nimport start from '../../../../sounds/clickEs.mp3'\r\nimport { Howl } from 'howler';\r\n\r\nexport const Marker = (props) => {\r\n\r\n\r\n  \r\n  const markerSpring = useSpring({\r\n    opacity: 1,\r\n    from: {\r\n      opacity: 0,\r\n    },\r\n    top: '-10px',\r\n    config: config.slow,\r\n  })\r\n\r\n  const sp = new Howl({\r\n    src: start\r\n  })\r\n  // sp.play()\r\n\r\n\r\n\r\n  const infoSpring = useSpring({\r\n    backgroundColor: 'rgba(0, 0, 0, 0.4)',\r\n    display: 'flex',\r\n    transform: props.id === props.selected ? 'scale(1)' : 'scale(0)',\r\n    from: {\r\n      transform: 'scale(0)'\r\n    }\r\n  })\r\n\r\n  function onClick() {\r\n    console.log(props)\r\n    props.onMarkerClicked(props.id, props.position, props.cameraPos);\r\n\r\n  }\r\n  // AIzaSyBL8XsAWI8IBe_ks49R_FgL9WzyAs-Usik\r\n\r\n  return (\r\n    <mesh position={props.position}>\r\n      <Html scaleFactor={100}>\r\n        <animated.div className=\"overlay\" style={markerSpring} onClick={onClick}>\r\n          <div className=\"circle box\">{props.id}</div>\r\n          <div className=\"box\">\r\n            <Nav.Link className=\"text-overlay\">{props.name}</Nav.Link>\r\n          </div>\r\n        </animated.div>\r\n        <animated.div className=\"info\" style={infoSpring}>\r\n\r\n          {/* <Maps loc={ props.loc }/> */}\r\n          {\r\n            props.position\r\n          }\r\n        </animated.div>\r\n      </Html>\r\n    </mesh>\r\n  );\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Marker } from './Marker'\r\n\r\nexport const CMarker = ({ markers, selectedItemIndex, onNavigationItemClicked, markers2 }) => {\r\n\r\n    const [markerNow, setmarkerNow] = useState([])\r\n\r\n    useEffect(() => {\r\n        if (markers2.length > 1) {\r\n            setmarkerNow(\r\n                markers2\r\n            )\r\n\r\n        }\r\n\r\n    }, [markers2])\r\n\r\n    return (\r\n        <group>\r\n            {\r\n                markerNow.length > 1 ? (\r\n                    markerNow.map(maker => (\r\n                        <Marker\r\n                            key={maker.id + 1}\r\n                            position={maker.position}\r\n                            name={maker.name}\r\n                            cameraPos={maker.cameraPos}\r\n                            id={maker.id}\r\n                            loc={maker.loc}\r\n                            selected={selectedItemIndex}\r\n                            onMarkerClicked={onNavigationItemClicked}\r\n                        />\r\n\r\n                    )\r\n                    )\r\n                ) : null\r\n            }\r\n            <Marker\r\n                position={markers[1].position}\r\n                name={markers[1].name}\r\n                id={1}\r\n                selected={selectedItemIndex}\r\n                onMarkerClicked={onNavigationItemClicked} />\r\n            <Marker\r\n                position={markers[2].position}\r\n                name={markers[2].name}\r\n                id={2}\r\n                selected={selectedItemIndex}\r\n                onMarkerClicked={onNavigationItemClicked} />\r\n            <Marker\r\n                position={markers[3].position}\r\n                name={markers[3].name}\r\n                id={3}\r\n                selected={selectedItemIndex}\r\n                onMarkerClicked={onNavigationItemClicked} />\r\n        </group>\r\n\r\n    )\r\n}\r\n","export const colores = {\r\n    'verde' :'rgb(0, 105, 92)',\r\n    'rojo' : 'rgb(255, 23, 68)',\r\n    'amarillo' : 'rgb(255, 214, 0)'\r\n}","import { useFrame } from 'react-three-fiber';\r\nimport { colores } from './../../../../helpers/colores';\r\n\r\n\r\n// import * as THREE from 'three'\r\nimport React, { useRef } from 'react'\r\n\r\n\r\nexport default function Room(props) {\r\n  const group = useRef()\r\n  const planet = useRef();\r\n\r\n  useFrame(() => {\r\n\r\n\r\n    planet.current.rotation.y += 0.1\r\n    // console.log(group)\r\n    // group.current.children[0].children[0].children[2].rotation.y += 0.1\r\n    group.current.children[0].children[0].children.forEach(item => {\r\n      item.rotation.y += 0.07\r\n    })\r\n\r\n  });\r\n\r\n\r\n  const colorH = (col) => {\r\n    let colorPlaneta\r\n    switch (col) {\r\n      case 'Crítica':\r\n        colorPlaneta = colores.rojo\r\n        break;\r\n      case 'Media':\r\n        colorPlaneta = colores.amarillo\r\n        break;\r\n      case 'Buena':\r\n        colorPlaneta = colores.verde\r\n        break;\r\n      default:\r\n        colorPlaneta = colores.verde\r\n        break;\r\n    }\r\n\r\n\r\n    return colorPlaneta\r\n  }\r\n  return (\r\n\r\n    <group ref={group} {...props} dispose={null}>\r\n      <group >\r\n        <group >\r\n\r\n          <mesh\r\n            visible\r\n            userData={{\r\n              test:\r\n                \"hello\"\r\n            }}\r\n            ref={planet}\r\n            position={[0, 0, 0]}\r\n            autoRotate={true}\r\n            autoRotateSpeed={0.2}>\r\n            <sphereGeometry attach=\"geometry\" args={[5, 7, 16]} />\r\n            <meshStandardMaterial attach=\"material\" color={colores.amarillo} />\r\n          </mesh>\r\n\r\n\r\n\r\n\r\n          {\r\n            props.markers2.map(marker => (\r\n              <mesh\r\n                visible\r\n                userData={{\r\n                  test:\r\n                    \"hello\"\r\n                }}\r\n                key={marker.position}\r\n                position={marker.position}\r\n                autoRotate={true}\r\n                autoRotateSpeed={0.8}>\r\n                <sphereGeometry\r\n                  attach=\"geometry\"\r\n                  args={[5, 7, 16]} />\r\n                <meshPhongMaterial\r\n                  attach=\"material\"\r\n                  color={colorH(\r\n                    marker.estatus_capacidad_hospitalaria\r\n                  )} />\r\n              </mesh>\r\n            ))\r\n          }\r\n\r\n\r\n        </group>\r\n\r\n      </group>\r\n\r\n    </group>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Room from './Room'\r\n\r\nexport const CRoom = ({position , markers2 }) => {\r\n\r\n    return (\r\n            <Room\r\n                position = { position }\r\n                markers2 = { markers2 }/>\r\n        \r\n    )\r\n}\r\n","import { useCallback } from 'react';\r\n/* eslint-disable no-unused-vars */\r\nimport { markerEjemplo } from './../../helpers/markerEjemplo';\r\nimport { Stars } from 'drei';\r\nimport React from 'react'\r\nimport { Suspense, useState } from 'react';\r\nimport { Canvas, extend } from 'react-three-fiber';\r\nimport { Controls } from './componentesThree/Controls/Controls';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\r\nimport { Navigation } from './componentesThree/Navigation/Navigation';\r\nimport { useSpring, animated, config } from \"react-spring\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavsHospitales } from './componentesThree/NavsHospitales/NavsHospitales';\r\nimport { Random } from 'random-js';\r\nimport { CMarker } from './componentesThree/Marker/CMarker';\r\nimport { setMakers } from '../../redux/ducks/PlanetasDuck';\r\nimport { CRoom } from './componentesThree/Room/CRoom';\r\nimport SoundPlanetas from '../../sounds/clickEs.mp3'\r\nimport { Howl } from 'howler';\r\n\r\n\r\nlet selectedItemIndex\r\n\r\nconst initialCameraPos = [18, 18, 18];\r\nconst initialControlsTarget = [0, 0, 0];\r\n\r\nextend({ OrbitControls })\r\nconst sp = new Howl({\r\n  src: SoundPlanetas\r\n})\r\nlet markers2 = [\r\n  {\r\n    position: [0, 0, 0],\r\n    cameraPos: [18, 18, 18],\r\n    name: \"camaraCentral\",\r\n    loc: [],\r\n    id: 0,\r\n    estatus_capacidad_hospitalaria: \"\"\r\n  }\r\n]\r\nconst random = new Random()\r\n\r\n\r\nexport const CPlanetas = ({handleChangeDate}) => {\r\n  let id = 1\r\n  const { datos } = useSelector(state => state.planetas)\r\n  const [bandera, setBandera] = useState(0)\r\n  const [cambiarDatos, setCambiarDatos] = useState([])\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  datos.forEach(dato => {\r\n    const uno = random.integer(-100, 100)\r\n    const dos = random.integer(-100, 100)\r\n    const tres = random.integer(-100, 100)\r\n\r\n    markers2 = [\r\n      ...markers2,\r\n      {\r\n        position: [uno, dos, tres],\r\n        cameraPos: [uno, dos, tres + 10],\r\n        name: dato.fields.nombre_hospital,\r\n        id: id,\r\n        loc: dato.fields.coordenadas,\r\n        estatus_capacidad_hospitalaria: dato.fields.estatus_capacidad_hospitalaria\r\n      }\r\n    ]\r\n    id++\r\n  })\r\n\r\n\r\n\r\n\r\n\r\n\r\n  useCallback(() => {\r\n    if (bandera === 1) {\r\n      dispatch(\r\n        setMakers(\r\n          markers2\r\n        )\r\n\r\n\r\n      )\r\n\r\n      let arrayDePrueba = datos.map(dato => {\r\n        const uno = random.integer(-100, 100)\r\n        const dos = random.integer(-100, 100)\r\n        const tres = random.integer(-100, 100)\r\n\r\n        return {\r\n          position: [uno, dos, tres],\r\n          cameraPos: [uno, dos, tres + 100],\r\n          name: dato.fields.nombre_hospital,\r\n          id: id,\r\n          loc: dato.fields.coordenadas,\r\n          estatus_capacidad_hospitalaria: dato.fields.estatus_capacidad_hospitalaria\r\n        }\r\n      })\r\n\r\n      console.log(arrayDePrueba)\r\n      setCambiarDatos( arrayDePrueba )\r\n\r\n    }\r\n\r\n    setBandera(bandera + 1)\r\n  }, [datos])\r\n\r\n  console.log( cambiarDatos )\r\n\r\n  const AnimatedNavigation = animated(Navigation);\r\n\r\n  const [isAnimating, setIsAnimating] = useState(false);\r\n\r\n  const [cameraValues, setCameraValues] = useState({\r\n    cachedPos: initialCameraPos,\r\n    cachedTarget: initialControlsTarget,\r\n    pos: initialCameraPos,\r\n    target: initialControlsTarget,\r\n    autoRotate: true,\r\n  });\r\n\r\n  const cameraSpring = useSpring({\r\n    pos: cameraValues.pos,\r\n    target: cameraValues.target,\r\n    from: {\r\n      pos: cameraValues.cachedPos,\r\n      target: cameraValues.cachedTarget\r\n    },\r\n    config: config.slow,\r\n    onRest: () => setIsAnimating(false)\r\n  })\r\n\r\n  const onNavigationItemClicked = (id, position, cameraPos) => {\r\n\r\n    sp.play()\r\n\r\n    if (selectedItemIndex !== id && !isAnimating) {\r\n      selectedItemIndex = id;\r\n      setIsAnimating(true);\r\n      setCameraValues({\r\n        cachedPos: cameraValues.pos,\r\n        cachedTarget: cameraValues.cachedTarget,\r\n        pos: cameraPos,\r\n        target: position,\r\n        autoRotate: id === 0,\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"ui\">\r\n        <NavsHospitales\r\n          onNavigationItemClicked={onNavigationItemClicked}\r\n          markers={markerEjemplo}\r\n          handleChangeDate={handleChangeDate}\r\n        />\r\n\r\n      </div>\r\n      {\r\n        markerEjemplo.length === 0 ? null :\r\n          <Canvas>\r\n\r\n            <ambientLight />\r\n            <pointLight\r\n              position={[100, 100, 100]}\r\n              intensity={2} />\r\n            <AnimatedNavigation\r\n              cameraPosition={cameraSpring.pos}\r\n              cameraTarget={cameraSpring.target} />\r\n            <CRoom\r\n              position={[0, 0, 0]}\r\n              markers2={markerEjemplo}\r\n            />\r\n\r\n\r\n\r\n            {isAnimating && markerEjemplo !== undefined ? null :\r\n              <CMarker markers={markerEjemplo}\r\n                markers2={markerEjemplo}\r\n\r\n                selectedItemIndex={selectedItemIndex}\r\n                onNavigationItemClicked={onNavigationItemClicked}\r\n              />\r\n\r\n\r\n            }\r\n            <Suspense />\r\n            <Controls\r\n              enabled={!isAnimating}\r\n              autoRotate={cameraValues.autoRotate}\r\n              target={cameraValues.target} />\r\n            <Stars\r\n              radius={100}\r\n              depth={100}\r\n              count={10000}\r\n              factor={6}\r\n              saturation={0}\r\n              fade={true} />\r\n          </Canvas>\r\n\r\n      }\r\n    </div>)\r\n}\r\n","import { useState } from 'react';\r\nimport React from 'react'\r\n\r\nlet fecha = new Date()\r\nlet mes\r\nif ((fecha.getMonth() + 1).length === 1) {\r\n    mes = (`${fecha.getMonth() + 1}`).padStart(2, 0)\r\n    console.log(mes)\r\n} else {\r\n    mes = (`${fecha.getMonth() + 1}`).padStart(2, 0)\r\n    console.log(mes)\r\n}\r\n\r\nlet nuevaFecha = `${fecha.getFullYear()}-${mes}-${(fecha.getDate()) - 1}`\r\n\r\n\r\nexport const useDate = (initialDate = nuevaFecha) => {\r\n\r\n    let tipoFecha = initialDate.replace(/-/g, '%2F')\r\n    const [fechaHoy, setfechaHoy] = useState(tipoFecha)\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setfechaHoy(target.value);\r\n\r\n    }\r\n\r\n    return [\r\n        fechaHoy, handleInputChange\r\n    ]\r\n}\r\n\r\n\r\n","import { useEffect } from 'react';\r\n/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { losDatos } from '../../../helpers/fun'\r\nimport { urlHospitales } from '../../../helpers/urls'\r\nimport { getHospitalesP, setFechaPlanetas } from '../../../redux/ducks/PlanetasDuck'\r\nimport { CPlanetas } from '../CPlanetas'\r\nimport '../../../planetaStyle.css'\r\nimport { useDate } from '../../../helpers/hooks/useDate'\r\n\r\nexport const ContenedorPlanetas = () => {\r\n\r\n    const hoy = new Date()\r\n    // console.log(hoy)\r\n    const dispatch = useDispatch()\r\n    // const [ fechaHoy ] = formatearFechas( new Date() )\r\n    // const [fechaHoyF] = convertirFecha( fechaHoy )\r\n    // console.log( fechaHoy )\r\n    const [ fecha , handleChangeDate ] = useDate()\r\n    console.log(fecha)\r\n    const url = urlHospitales( 50 , fecha)\r\n    useEffect(() => {\r\n        dispatch(\r\n            setFechaPlanetas(fecha)\r\n        )\r\n        losDatos( url ).then(res => {\r\n            console.log(res)\r\n            dispatch(\r\n                getHospitalesP( res )\r\n            )\r\n        })\r\n    }, [fecha , url])\r\n\r\n    return (\r\n        <div>\r\n            <CPlanetas\r\n                handleChangeDate={handleChangeDate}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport { Contenedor } from '../components/Contenedor';\r\nimport { ContenedorHospitales } from '../components/hospitales/ContenedorHospitales';\r\nimport { ContenedorPlanetas } from '../components/interactivo/componentesThree/ContenedorPlanetas';\r\n\r\n\r\nexport const AppRouter = () => {\r\n    return (\r\n        <Router>\r\n         <div >\r\n        <Switch>\r\n\r\n            <Route \r\n                exact \r\n                path=\"/estados\" \r\n                component={ Contenedor }\r\n            />\r\n            <Route \r\n                exact\r\n                path=\"/hospitales\"\r\n                component={ ContenedorHospitales }\r\n            />\r\n\r\n            <Route \r\n                exact\r\n                path=\"/planetas\"\r\n                component={ ContenedorPlanetas }\r\n            />\r\n            <Route \r\n                exact\r\n                path=\"/\"\r\n                component={ ContenedorPlanetas }\r\n            />\r\n\r\n            <Redirect to=\"/\" />   \r\n        </Switch>\r\n        </div>\r\n\r\n        \r\n        </Router>\r\n    )\r\n}\r\n","import { Provider } from 'react-redux';\r\nimport { store } from './redux/store/store';\r\nimport { AppRouter } from './router/AppRouter';\r\nimport { initDB } from 'react-indexed-db'\r\nimport { DBConfig } from './config/DBConfig'\r\nimport './index.css'\r\n\r\ninitDB( DBConfig ) \r\n\r\nexport  const  App = ()=> {\r\n  return (\r\n\r\n    <Provider  store={ store } >\r\n     <div >\r\n        <AppRouter/>\r\n    </div>\r\n    </Provider>\r\n  )\r\n  \r\n}\r\n\r\n\r\n\r\n","export const DBConfig = {\r\n    name:'covDB',\r\n    version : 1 ,\r\n    objectStoresMeta : [\r\n        {\r\n            store : 'covFechas' ,\r\n            storeConfig:{\r\n                keypath: 'id',\r\n                autoIncrement : true\r\n            },\r\n            storeSchema : [\r\n                {\r\n                    name : 'hoy',\r\n                    keypath: 'hoy',\r\n                    options:{\r\n                        unique :false\r\n                }\r\n                },{\r\n                    name: 'datos',\r\n                    keypath : 'datos',\r\n                    options:{\r\n                        unique: false\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nimport './index.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n"],"sourceRoot":""}