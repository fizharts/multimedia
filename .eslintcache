[{"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/index.js":"1","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/App.jsx":"2","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/redux/store/store.js":"3","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/config/DBConfig.js":"4","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/router/AppRouter.jsx":"5","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/redux/store/rootReducer.js":"6","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/components/Contenedor.jsx":"7","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/components/hospitales/ContenedorHospitales.jsx":"8","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/helpers/urls.js":"9","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/helpers/fun.js":"10","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/redux/ducks/HospitalesDuck.js":"11","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/redux/ducks/EstadosDuck.js":"12","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/components/EstadosComponent.jsx":"13","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/components/hospitales/HospitalesComponent.jsx":"14","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/helpers/parametrosHopitales.js":"15","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/helpers/parametros.js":"16","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/redux/types/types.js":"17","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/components/Estado.jsx":"18","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/components/Parametros.jsx":"19","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/components/hospitales/ParametrosHospital.jsx":"20","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/components/hospitales/Hospital.jsx":"21"},{"size":228,"mtime":1608045379992,"results":"22","hashOfConfig":"23"},{"size":382,"mtime":1608646876338,"results":"24","hashOfConfig":"23"},{"size":373,"mtime":1608237413903,"results":"25","hashOfConfig":"23"},{"size":675,"mtime":1608672047285,"results":"26","hashOfConfig":"23"},{"size":745,"mtime":1608750214487,"results":"27","hashOfConfig":"23"},{"size":269,"mtime":1608750962150,"results":"28","hashOfConfig":"23"},{"size":944,"mtime":1608756196731,"results":"29","hashOfConfig":"23"},{"size":1308,"mtime":1609167601125,"results":"30","hashOfConfig":"23"},{"size":918,"mtime":1608749701017,"results":"31","hashOfConfig":"23"},{"size":2493,"mtime":1608833944968,"results":"32","hashOfConfig":"23"},{"size":3024,"mtime":1609166871527,"results":"33","hashOfConfig":"23"},{"size":2083,"mtime":1609160964548,"results":"34","hashOfConfig":"23"},{"size":2940,"mtime":1608758362831,"results":"35","hashOfConfig":"23"},{"size":3747,"mtime":1609168504047,"results":"36","hashOfConfig":"23"},{"size":303,"mtime":1608755356904,"results":"37","hashOfConfig":"23"},{"size":1566,"mtime":1608751158150,"results":"38","hashOfConfig":"23"},{"size":588,"mtime":1609160964552,"results":"39","hashOfConfig":"23"},{"size":2690,"mtime":1608760463611,"results":"40","hashOfConfig":"23"},{"size":2567,"mtime":1608737114412,"results":"41","hashOfConfig":"23"},{"size":557,"mtime":1609168182166,"results":"42","hashOfConfig":"23"},{"size":683,"mtime":1608818448518,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1dkrzq",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/index.js",[],["90","91"],"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/App.jsx",[],"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/redux/store/store.js",[],"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/config/DBConfig.js",[],"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/router/AppRouter.jsx",[],"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/redux/store/rootReducer.js",[],"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/components/Contenedor.jsx",[],"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/components/hospitales/ContenedorHospitales.jsx",["92"],"import { fechaStage, fechaStageH } from './../../redux/ducks/HospitalesDuck';\nimport React, { Fragment, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { formatearFechas, losDatos } from '../../helpers/fun'\nimport { urlHospitales } from '../../helpers/urls'\nimport { getDatosH } from '../../redux/ducks/HospitalesDuck'\nimport { HospitalesComponent } from './HospitalesComponent';\n\nexport const ContenedorHospitales = () => {\n\n\n    const dispatch = useDispatch()\n\n\n    const { numeroRegistrosHospitales } = useSelector(state => state.hospitales)\n    \n    useEffect(() => {\n        \n        const hoy = new Date()\n        const [ hoyF ] = formatearFechas( hoy )\n        console.log(hoyF);\n        try {\n            dispatch(\n                fechaStageH()\n            )\n            const url = urlHospitales( numeroRegistrosHospitales , '2020%2F12%2F09')\n            console.log(url )\n            losDatos( url ).then(result => {\n                    \n                dispatch(\n                    getDatosH( result )\n                )\n                            \n        \n            })\n        } catch (e) {\n        \n        }\n    },[dispatch , numeroRegistrosHospitales])\n\n\n    return (\n        <Fragment>\n            <HospitalesComponent/>\n        </Fragment>\n    )\n}\n","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/helpers/urls.js",[],"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/helpers/fun.js",["93","94"],"import { diaHoy } from './../redux/ducks/HospitalesDuck';\nimport { useDispatch } from 'react-redux';\nimport { moment } from 'moment';\nimport Axios from \"axios\"\n\n\n\nexport const removeRepeats = ( dataArray ) => {\n    let setHelper = new Set( dataArray )\n    let arreglo = Array.from(setHelper)\n    return [\n        arreglo\n    ]\n}\n\n\nexport const obtenerItem = ( nombreItem ) => {\n        let res = {}\n        if ( localStorage.getItem(nombreItem)) {\n            res = localStorage.getItem(nombreItem)\n        }\n\n\n        \n    return  res \n}\n\nexport const setValorLocal = ( nombreITem , valorItem ) => {\n    let valorsito = JSON.stringify(valorItem)\n    console.log( valorItem )\n    localStorage.setItem( nombreITem , valorsito  )\n}\n\n\nexport const convertString = ( ...valores ) => {\n    let nuevosValores = valores.map( valor => {\n        return JSON.stringify(valor)\n    })\n    return [\n        nuevosValores\n    ]\n}\n\n\nexport const losDatos = async ( urlGeneral ) => {\n    const { data } = await Axios.get( urlGeneral )\n    console.log(data)\n    return data\n}\n\n\nexport const yaEstaEnBase = (arrayBase) => {\n    let baseLimpia = arrayBase.filter(base=> {\n        return base.fecha !== undefined && base.datos.length !== 0\n    } )\n\n    let set = new Set( baseLimpia.map( JSON.stringify ) )\n    let arrSinDuplicaciones = Array.from( set ).map( JSON.parse );\n\n\n    return {\n        arrSinDuplicaciones\n    }\n        \n    \n}\n\n\nexport const fechaHoy = ( ) => {\n    let hoy = moment().format('DD-MM-YYYY')\n    return {\n        hoy\n    }\n}\nexport  const alertas = (estatus_capacidad_hospitalaria)=> {\n    \n    switch (estatus_capacidad_hospitalaria) {\n        case 'Crítica':\n            return {\n                backgroundColor : 'red',\n                color: 'white'\n            }\n    \n        case 'Media' : \n            return {\n            backgroundColor : '#f0ad4e',\n                color: 'black' \n        }        \n        case 'Buena' : \n            return {\n            backgroundColor : '#5cb85c',\n                color: 'white' \n            }   \n            \n        default :\n            return {}\n\n\n    }\n}\n\n\n\n\n    export const convertirFecha = ( fechaInicial ) => {\n        // 2020%2F12%2F20\n    let tipoFecha = fechaInicial.replace(/-/g , '%2F')\n\n\n        return [\n            tipoFecha\n        ]\n    }\n\nexport const formatearFechas = ( fecha ) => {\n    let nuevaFecha =  `${fecha.getFullYear()}-${fecha.getMonth()+1}-${fecha.getDate()}`  \n    return [\n        nuevaFecha\n    ]\n}\n\n\n\n\n","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/redux/ducks/HospitalesDuck.js",[],"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/redux/ducks/EstadosDuck.js",[],"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/components/EstadosComponent.jsx",["95","96"],"\nimport React, { Fragment, useEffect } from 'react'\nimport { useIndexedDB } from 'react-indexed-db'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { yaEstaEnBase } from '../helpers/fun'\nimport { setNumeroRegistros } from '../redux/ducks/EstadosDuck'\nimport { Estado } from './Estado'\nimport Parametros from './Parametros'\n\n\n\n\nexport const EstadosComponent = () => {\n\n    const db = useIndexedDB('covFechas')\n    const dispatch = useDispatch()\n    const { datos , fecha:{ hoy , ayer , fechaServidor } , parametros , numeroRegistros  } = useSelector(state => state.datos)\n\n    \n    \n    if (datos.length === 0) {\n        console.log( 'no llegaron' );\n    }\n\n    const handleChange = ( e )=> {\n        console.log(e.target.value)\n        dispatch(\n            setNumeroRegistros( e.target.value )\n        )\n        \n    }\n\n\n    useEffect(() => {\n        if ( fechaServidor !== '' ||  datos.length > 0) {\n            db.add({\n                'fecha' : fechaServidor,\n                'datos' : datos\n            }).then(e => {\n                console.log(e)\n            })\n        }\n\n        db.getAll().then(res => {\n            \n        const { arrSinDuplicaciones } =  yaEstaEnBase( res )\n            console.log( arrSinDuplicaciones );\n        })\n\n        console.log(numeroRegistros)\n\n\n\n    }, [datos, db, fechaServidor, numeroRegistros])\n\n\n\n\n    return (\n        <div className=\"m-5\">\n    \n            <h1>Estados</h1>\n                <div className=\"row\">\n                <input \n                    type=\"number\" \n                    name=\"Numberr\" \n                    id=\"inputNumberr\" \n                    className=\"form-control\" \n                    defaultValue \n                    min={ 100 } \n                    max={ 1000 } \n                    step={ 100 } \n                    required=\"required\"\n                    onChange={ (e)=> handleChange(e) }\n\n                    />\n\n                </div>\n            <div className=\"table-responsive\" style={ {\n                height: '80vh'\n            } }>\n            <table className=\"table table-hover  table-dark \">\n            <thead style={{\n            \n                backgroundColor:'#01599d'\n            }}>\n                <tr>\n                    { \n                        <Fragment>\n                            <Parametros  parametros={ parametros }  />\n                        </Fragment>\n                    \n                    }\n                </tr>\n            \n            </thead>\n            <tbody>\n\n            {\n                datos.map(({ recordid  , fields }) => {\n\n                    return (\n                        <Fragment key={ recordid }>\n                            <Estado fields={ fields } />\n                        </Fragment>\n                    )\n                })\n            }\n                \n                \n            </tbody>\n        </table>\n            </div>\n            \n        \n\n        </div>\n    )\n}\n","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/components/hospitales/HospitalesComponent.jsx",[],"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/helpers/parametrosHopitales.js",[],"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/helpers/parametros.js",[],"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/redux/types/types.js",[],"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/components/Estado.jsx",[],"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/components/Parametros.jsx",[],"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/components/hospitales/ParametrosHospital.jsx",[],"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/components/hospitales/Hospital.jsx",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":1,"column":10,"nodeType":"103","messageId":"104","endLine":1,"endColumn":20},{"ruleId":"101","severity":1,"message":"105","line":1,"column":10,"nodeType":"103","messageId":"104","endLine":1,"endColumn":16},{"ruleId":"101","severity":1,"message":"106","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":21},{"ruleId":"101","severity":1,"message":"107","line":17,"column":29,"nodeType":"103","messageId":"104","endLine":17,"endColumn":32},{"ruleId":"101","severity":1,"message":"108","line":17,"column":35,"nodeType":"103","messageId":"104","endLine":17,"endColumn":39},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'fechaStage' is defined but never used.","Identifier","unusedVar","'diaHoy' is defined but never used.","'useDispatch' is defined but never used.","'hoy' is assigned a value but never used.","'ayer' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]