[{"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/index.js":"1","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/App.jsx":"2","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/router/AppRouter.jsx":"3","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/components/EstadosComponent.jsx":"4","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/redux/store/store.js":"5","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/redux/store/rootReducer.js":"6","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/redux/ducks/EstadosDuck.js":"7","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/helpers/urls.js":"8","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/redux/types/types.js":"9","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/helpers/fun.js":"10","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/config/DBConfig.js":"11","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/components/Contenedor.jsx":"12","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/helpers/parametros.js":"13","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/components/Estado.jsx":"14","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/components/Parametros.jsx":"15","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/components/hospitales/ContenedorHospitales.jsx":"16","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/redux/ducks/HospitalesDuck.js":"17","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/helpers/parametrosHopitales.js":"18","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/components/hospitales/HospitalesComponent.jsx":"19","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/components/hospitales/Hospital.jsx":"20","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/components/hospitales/ParametrosHospital.jsx":"21"},{"size":228,"mtime":1608045379992,"results":"22","hashOfConfig":"23"},{"size":382,"mtime":1608646876338,"results":"24","hashOfConfig":"23"},{"size":745,"mtime":1608750214487,"results":"25","hashOfConfig":"23"},{"size":2940,"mtime":1608758362831,"results":"26","hashOfConfig":"23"},{"size":373,"mtime":1608237413903,"results":"27","hashOfConfig":"23"},{"size":269,"mtime":1608750962150,"results":"28","hashOfConfig":"23"},{"size":2082,"mtime":1608750813553,"results":"29","hashOfConfig":"23"},{"size":918,"mtime":1608749701017,"results":"30","hashOfConfig":"23"},{"size":471,"mtime":1608750620321,"results":"31","hashOfConfig":"23"},{"size":1430,"mtime":1608755487681,"results":"32","hashOfConfig":"23"},{"size":675,"mtime":1608672047285,"results":"33","hashOfConfig":"23"},{"size":944,"mtime":1608756196731,"results":"34","hashOfConfig":"23"},{"size":1566,"mtime":1608751158150,"results":"35","hashOfConfig":"23"},{"size":2690,"mtime":1608760463611,"results":"36","hashOfConfig":"23"},{"size":2567,"mtime":1608737114412,"results":"37","hashOfConfig":"23"},{"size":1192,"mtime":1608757409631,"results":"38","hashOfConfig":"23"},{"size":2114,"mtime":1608755260350,"results":"39","hashOfConfig":"23"},{"size":303,"mtime":1608755356904,"results":"40","hashOfConfig":"23"},{"size":1947,"mtime":1608758730238,"results":"41","hashOfConfig":"23"},{"size":1464,"mtime":1608760879489,"results":"42","hashOfConfig":"23"},{"size":586,"mtime":1608758647435,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1dkrzq",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/index.js",[],["91","92"],"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/App.jsx",[],"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/router/AppRouter.jsx",[],"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/components/EstadosComponent.jsx",["93","94"],"\nimport React, { Fragment, useEffect } from 'react'\nimport { useIndexedDB } from 'react-indexed-db'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { yaEstaEnBase } from '../helpers/fun'\nimport { setNumeroRegistros } from '../redux/ducks/EstadosDuck'\nimport { Estado } from './Estado'\nimport Parametros from './Parametros'\n\n\n\n\nexport const EstadosComponent = () => {\n\n    const db = useIndexedDB('covFechas')\n    const dispatch = useDispatch()\n    const { datos , fecha:{ hoy , ayer , fechaServidor } , parametros , numeroRegistros  } = useSelector(state => state.datos)\n\n    \n    \n    if (datos.length === 0) {\n        console.log( 'no llegaron' );\n    }\n\n    const handleChange = ( e )=> {\n        console.log(e.target.value)\n        dispatch(\n            setNumeroRegistros( e.target.value )\n        )\n        \n    }\n\n\n    useEffect(() => {\n        if ( fechaServidor !== '' ||  datos.length > 0) {\n            db.add({\n                'fecha' : fechaServidor,\n                'datos' : datos\n            }).then(e => {\n                console.log(e)\n            })\n        }\n\n        db.getAll().then(res => {\n            \n        const { arrSinDuplicaciones } =  yaEstaEnBase( res )\n            console.log( arrSinDuplicaciones );\n        })\n\n        console.log(numeroRegistros)\n\n\n\n    }, [datos, db, fechaServidor, numeroRegistros])\n\n\n\n\n    return (\n        <div className=\"m-5\">\n    \n            <h1>Estados</h1>\n                <div className=\"row\">\n                <input \n                    type=\"number\" \n                    name=\"Numberr\" \n                    id=\"inputNumberr\" \n                    className=\"form-control\" \n                    defaultValue \n                    min={ 100 } \n                    max={ 1000 } \n                    step={ 100 } \n                    required=\"required\"\n                    onChange={ (e)=> handleChange(e) }\n\n                    />\n\n                </div>\n            <div className=\"table-responsive\" style={ {\n                height: '80vh'\n            } }>\n            <table className=\"table table-hover  table-dark \">\n            <thead style={{\n            \n                backgroundColor:'#01599d'\n            }}>\n                <tr>\n                    { \n                        <Fragment>\n                            <Parametros  parametros={ parametros }  />\n                        </Fragment>\n                    \n                    }\n                </tr>\n            \n            </thead>\n            <tbody>\n\n            {\n                datos.map(({ recordid  , fields }) => {\n\n                    return (\n                        <Fragment key={ recordid }>\n                            <Estado fields={ fields } />\n                        </Fragment>\n                    )\n                })\n            }\n                \n                \n            </tbody>\n        </table>\n            </div>\n            \n        \n\n        </div>\n    )\n}\n","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/redux/store/store.js",[],"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/redux/store/rootReducer.js",[],"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/redux/ducks/EstadosDuck.js",[],"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/helpers/urls.js",[],"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/redux/types/types.js",[],"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/helpers/fun.js",[],"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/config/DBConfig.js",[],"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/components/Contenedor.jsx",[],"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/helpers/parametros.js",[],"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/components/Estado.jsx",[],"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/components/Parametros.jsx",[],"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/components/hospitales/ContenedorHospitales.jsx",["95"],"import { moment } from 'moment';\nimport React, { Fragment, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { losDatos } from '../../helpers/fun'\nimport { urlHospitales } from '../../helpers/urls'\nimport { diaHoy, getDatosH } from '../../redux/ducks/HospitalesDuck'\nimport { HospitalesComponent } from './HospitalesComponent';\n\nexport const ContenedorHospitales = () => {\n\n\n    const dispatch = useDispatch()\n\n    const { numeroRegistrosHospitales } = useSelector(state => state.hospitales)\n    \n    useEffect(() => {\n        try {\n            const url = urlHospitales( numeroRegistrosHospitales , '2020%2F12%2F09')\n            console.log(url )\n            losDatos( url ).then(result => {\n                const hoy = new Date()\n                \n                dispatch(\n                    getDatosH( result )\n                )\n\n                dispatch(\n                    diaHoy(\n                        hoy\n                    )\n                )\n            })\n        } catch (e) {\n        \n        }\n    },[dispatch , numeroRegistrosHospitales])\n\n\n    return (\n        <Fragment>\n            <HospitalesComponent/>\n        </Fragment>\n    )\n}\n","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/redux/ducks/HospitalesDuck.js",["96"],"import { moment } from 'moment';\nimport { parametrosHospitales } from '../../helpers/parametrosHopitales';\nimport { types } from './../types/types';\n\nconst initialState = {\n    datosH : []  ,\n    parametrosH : [] ,\n    fechaH : {} ,\n    numeroRegistrosH : 50\n}\n\nexport const hospitalesReducer = ( state = initialState , action ) => {\n    switch ( action.type ){\n        case types.datosGeneralesHospitales:\n            return {\n                ...state , \n                datosH : action.payload\n            }\n\n        case types.fechaDHoyHospitales : \n            return {\n                ...state ,\n                fechaH : action.payload\n            }\n\n        case types.parametrosHospitales : \n            return {\n                ...state ,\n                parametrosH : action.payload\n            }\n        case types.numeroRegistrosHospitales :\n            return {\n                ...state ,\n                numeroRegistrosH : action.payload\n            }\n        \n    \n        default:\n            return state;\n    }\n}\n\n\n\nexport const getDatosH = ( datosCompletos )=> {\n\n    const { records } = datosCompletos\n    console.log(records)\n    return async( dispatch , getState  )=> {\n\n            \n            // const ayer  = moment().subtract(1 , 'd').format('DD-MM-YYYY')\n            // const [ fechaHoy ] = removeRepeats( (records.map( dato => dato.record_timestamp )) )\n            // console.log( fechaHoy )\n            // const fechaRest = moment(fechaHoy[0]).format('DD-MM-YYYY')\n            dispatch( putDatos( records ) ) \n            // dispatch( diaHoy( hoy , ayer ,fechaRest ) )\n            dispatch( setParametros(parametrosHospitales) )\n\n    \n\n    \n    \n    }\n}\n\n\nconst setParametros = ( facet ) => ({\n    type : types.parametrosHospitales ,\n    payload :facet\n})\n\nexport const diaHoy = ( hoy )=> ({\n    type : types.fechaDHoyHospitales ,\n    payload: { hoy }\n})\n\nconst putDatos = ( dGenerales )=> ({\n    type : types.datosGeneralesHospitales,\n    payload: dGenerales\n})\n\nexport const setNumeroRegistros = ( numero ) => ({\n    type : types.numeroRegistrosHospitales,\n    payload : numero\n})\n\n","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/helpers/parametrosHopitales.js",[],"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/components/hospitales/HospitalesComponent.jsx",["97"],"import { useDispatch, useSelector } from 'react-redux';\nimport React, { Fragment } from 'react'\nimport { Hospital } from './Hospital';\nimport { ParametrosHospital } from './ParametrosHospital';\n\nexport const HospitalesComponent = () => {\n\n\n    const {datosH , parametrosH} = useSelector(state => state.hospitales)\n\n    console.log( parametrosH )\n    return (\n        <div className=\"m-5\">\n    \n            <h1>Hospitales</h1>\n                <div className=\"row\">\n                <input \n                    type=\"number\" \n                    name=\"Numberr\" \n                    id=\"inputNumberr\" \n                    className=\"form-control\" \n                    defaultValue \n                    min={ 100 } \n                    max={ 1000 } \n                    step={ 100 } \n                    required=\"required\"\n                    // onChange={ (e)=> handleChange(e) }\n\n                    />\n\n                </div>\n            <div className=\"table-responsive\" style={ {\n                height: '80vh'\n            } }>\n            <table className=\"table table-hover  table-dark \">\n            <thead style={{\n            \n                backgroundColor:'#01599d'\n            }}>\n                <tr>\n                    { \n                        <Fragment>\n                            <ParametrosHospital  parametrosH={ parametrosH }  />\n                        </Fragment>\n                    \n                    }\n                </tr>\n            \n            </thead>\n            <tbody>\n\n            {\n                datosH.map(({ recordid  , fields }) => {\n\n                    return (\n                        <Fragment key={ recordid }>\n                            <Hospital fields={ fields } />\n                        </Fragment>\n                    )\n                })\n            }\n                \n                \n            </tbody>\n        </table>\n            </div>\n            \n        \n\n        </div>\n    )\n}\n","/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/components/hospitales/Hospital.jsx",["98","99","100","101"],"/var/www/html/desarrollos/react/ProyectoMultimedia/multimedia/src/components/hospitales/ParametrosHospital.jsx",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":17,"column":29,"nodeType":"108","messageId":"109","endLine":17,"endColumn":32},{"ruleId":"106","severity":1,"message":"110","line":17,"column":35,"nodeType":"108","messageId":"109","endLine":17,"endColumn":39},{"ruleId":"106","severity":1,"message":"111","line":1,"column":10,"nodeType":"108","messageId":"109","endLine":1,"endColumn":16},{"ruleId":"106","severity":1,"message":"111","line":1,"column":10,"nodeType":"108","messageId":"109","endLine":1,"endColumn":16},{"ruleId":"106","severity":1,"message":"112","line":1,"column":10,"nodeType":"108","messageId":"109","endLine":1,"endColumn":21},{"ruleId":"106","severity":1,"message":"113","line":5,"column":13,"nodeType":"108","messageId":"109","endLine":5,"endColumn":23},{"ruleId":"106","severity":1,"message":"114","line":9,"column":13,"nodeType":"108","messageId":"109","endLine":9,"endColumn":27},{"ruleId":"115","severity":1,"message":"116","line":16,"column":9,"nodeType":"117","messageId":"118","endLine":35,"endColumn":10},{"ruleId":"119","severity":1,"message":"120","line":22,"column":17,"nodeType":"121","messageId":"122","endLine":22,"endColumn":23},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'hoy' is assigned a value but never used.","Identifier","unusedVar","'ayer' is assigned a value but never used.","'moment' is defined but never used.","'useDispatch' is defined but never used.","'estiloRojo' is assigned a value but never used.","'estiloAmarillo' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-global-assign","no-unsafe-negation"]